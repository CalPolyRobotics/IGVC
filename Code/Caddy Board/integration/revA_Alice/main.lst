   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 159               	.global	count
 160               		.section .bss
 163               	count:
 164 0000 0000      		.zero	2
 165               		.comm	sonarTime,2,1
 166               		.text
 168               	.global	vApplicationTickHook
 170               	vApplicationTickHook:
 171               		.stabd	46,0,0
   1:main.c        **** /*
   2:main.c        ****  FreeRTOS V6.1.0
   3:main.c        ****  
   4:main.c        ****  This is a basic RTOS program. It turns on the LEDs.
   5:main.c        ****  Nothing too exciting.
   6:main.c        ****  
   7:main.c        ****  */
   8:main.c        **** 
   9:main.c        **** #include <stdint.h>
  10:main.c        **** #include <avr/io.h>
  11:main.c        **** #include <string.h>
  12:main.c        **** #include <stdlib.h>
  13:main.c        **** #include <stdio.h>
  14:main.c        **** #include <math.h>
  15:main.c        **** #include "FreeRTOS.h"
  16:main.c        **** #include <avr/interrupt.h>
  17:main.c        **** #include "task.h"
  18:main.c        **** #include "usart.h"
  19:main.c        **** #include "sonar.h"
  20:main.c        **** #include "queue.h"
  21:main.c        **** 
  22:main.c        **** void vTaskFunction_1(void *pvParameters);
  23:main.c        **** void vIO_init(void);
  24:main.c        **** void vApplicationTickHook();
  25:main.c        **** void printNum(unsigned char i);
  26:main.c        **** void printHex(int i);
  27:main.c        **** 
  28:main.c        **** int count = 0;
  29:main.c        **** 
  30:main.c        **** int sonarTime;
  31:main.c        **** 
  32:main.c        **** void vApplicationTickHook()
  33:main.c        **** {
 173               	.LM0:
 174               	.LFBB1:
 175 0000 CF93      		push r28
 176 0002 DF93      		push r29
 177 0004 CDB7      		in r28,__SP_L__
 178 0006 DEB7      		in r29,__SP_H__
 179               	/* prologue: function */
 180               	/* frame size = 0 */
 181               	/* stack size = 2 */
 182               	.L__stack_usage = 2
  34:main.c        ****     count++;
 184               	.LM1:
 185 0008 8091 0000 		lds r24,count
 186 000c 9091 0000 		lds r25,count+1
 187 0010 0196      		adiw r24,1
 188 0012 9093 0000 		sts count+1,r25
 189 0016 8093 0000 		sts count,r24
 190               	/* epilogue start */
  35:main.c        **** }
 192               	.LM2:
 193 001a DF91      		pop r29
 194 001c CF91      		pop r28
 195 001e 0895      		ret
 197               	.Lscope1:
 199               		.stabd	78,0,0
 200               		.section	.rodata
 201               	.LC1:
 202 0000 5430 00   		.string	"T0"
 203               		.text
 205               	.global	main
 207               	main:
 208               		.stabd	46,0,0
  36:main.c        **** /*-----------------------------------------------------------*/
  37:main.c        **** 
  38:main.c        **** int main( void )
  39:main.c        **** {
 210               	.LM3:
 211               	.LFBB2:
 212 0020 AF92      		push r10
 213 0022 BF92      		push r11
 214 0024 CF92      		push r12
 215 0026 DF92      		push r13
 216 0028 EF92      		push r14
 217 002a FF92      		push r15
 218 002c 0F93      		push r16
 219 002e CF93      		push r28
 220 0030 DF93      		push r29
 221 0032 00D0      		rcall .
 222 0034 00D0      		rcall .
 223 0036 CDB7      		in r28,__SP_L__
 224 0038 DEB7      		in r29,__SP_H__
 225               	/* prologue: function */
 226               	/* frame size = 6 */
 227               	/* stack size = 15 */
 228               	.L__stack_usage = 15
  40:main.c        ****     
  41:main.c        ****     //- wimpy variable defs
  42:main.c        **** 	uint8_t val[2] = {0x3F, 0xFE};
 230               	.LM4:
 231 003a 8FE3      		ldi r24,lo8(63)
 232 003c 8D83      		std Y+5,r24
 233 003e 8EEF      		ldi r24,lo8(-2)
 234 0040 8E83      		std Y+6,r24
  43:main.c        ****     uint8_t *val0, *val1;
  44:main.c        ****     
  45:main.c        **** 	//- avoid pesky warnings...
  46:main.c        **** 	val0 = val + 0;
 236               	.LM5:
 237 0042 CE01      		movw r24,r28
 238 0044 0596      		adiw r24,5
 239 0046 9A83      		std Y+2,r25
 240 0048 8983      		std Y+1,r24
  47:main.c        **** 	val1 = val + 1;
 242               	.LM6:
 243 004a CE01      		movw r24,r28
 244 004c 0596      		adiw r24,5
 245 004e 0196      		adiw r24,1
 246 0050 9C83      		std Y+4,r25
 247 0052 8B83      		std Y+3,r24
  48:main.c        ****     
  49:main.c        **** 	DDRD = 0xFF;
 249               	.LM7:
 250 0054 8AE2      		ldi r24,lo8(42)
 251 0056 90E0      		ldi r25,0
 252 0058 2FEF      		ldi r18,lo8(-1)
 253 005a FC01      		movw r30,r24
 254 005c 2083      		st Z,r18
  50:main.c        **** 	DDRE = 0xFF;
 256               	.LM8:
 257 005e 8DE2      		ldi r24,lo8(45)
 258 0060 90E0      		ldi r25,0
 259 0062 2FEF      		ldi r18,lo8(-1)
 260 0064 FC01      		movw r30,r24
 261 0066 2083      		st Z,r18
  51:main.c        **** 	DDRK = 0;
 263               	.LM9:
 264 0068 87E0      		ldi r24,lo8(7)
 265 006a 91E0      		ldi r25,lo8(1)
 266 006c FC01      		movw r30,r24
 267 006e 1082      		st Z,__zero_reg__
  52:main.c        **** 
  53:main.c        **** 	PORTD = 0;
 269               	.LM10:
 270 0070 8BE2      		ldi r24,lo8(43)
 271 0072 90E0      		ldi r25,0
 272 0074 FC01      		movw r30,r24
 273 0076 1082      		st Z,__zero_reg__
  54:main.c        **** 	PORTE = 0;
 275               	.LM11:
 276 0078 8EE2      		ldi r24,lo8(46)
 277 007a 90E0      		ldi r25,0
 278 007c FC01      		movw r30,r24
 279 007e 1082      		st Z,__zero_reg__
  55:main.c        **** 	PORTK = 2;
 281               	.LM12:
 282 0080 88E0      		ldi r24,lo8(8)
 283 0082 91E0      		ldi r25,lo8(1)
 284 0084 22E0      		ldi r18,lo8(2)
 285 0086 FC01      		movw r30,r24
 286 0088 2083      		st Z,r18
  56:main.c        **** 
  57:main.c        ****     //- init IO with goodness
  58:main.c        **** 	vIO_init();
 288               	.LM13:
 289 008a 0E94 0000 		call vIO_init
  59:main.c        **** 
  60:main.c        **** 	//- Create a 
  61:main.c        **** 	xTaskCreate( (pdTASK_CODE) vTaskFunction_1, (signed char *) "T0", configMINIMAL_STACK_SIZE+1000,
 291               	.LM14:
 292 008e 8B81      		ldd r24,Y+3
 293 0090 9C81      		ldd r25,Y+4
 294 0092 A12C      		mov r10,__zero_reg__
 295 0094 B12C      		mov r11,__zero_reg__
 296 0096 C12C      		mov r12,__zero_reg__
 297 0098 D12C      		mov r13,__zero_reg__
 298 009a E12C      		mov r14,__zero_reg__
 299 009c F12C      		mov r15,__zero_reg__
 300 009e 01E0      		ldi r16,lo8(1)
 301 00a0 9C01      		movw r18,r24
 302 00a2 4DE3      		ldi r20,lo8(61)
 303 00a4 54E0      		ldi r21,lo8(4)
 304 00a6 60E0      		ldi r22,lo8(.LC1)
 305 00a8 70E0      		ldi r23,hi8(.LC1)
 306 00aa 80E0      		ldi r24,lo8(gs(vTaskFunction_1))
 307 00ac 90E0      		ldi r25,hi8(gs(vTaskFunction_1))
 308 00ae 0E94 0000 		call xTaskGenericCreate
  62:main.c        ****                 (void *) val1, 1, NULL );
  63:main.c        ****     
  64:main.c        ****    xTaskCreate( (pdTASK_CODE) vTaskSonar, (signed char *) "T0", configMINIMAL_STACK_SIZE,
 310               	.LM15:
 311 00b2 8B81      		ldd r24,Y+3
 312 00b4 9C81      		ldd r25,Y+4
 313 00b6 A12C      		mov r10,__zero_reg__
 314 00b8 B12C      		mov r11,__zero_reg__
 315 00ba C12C      		mov r12,__zero_reg__
 316 00bc D12C      		mov r13,__zero_reg__
 317 00be E12C      		mov r14,__zero_reg__
 318 00c0 F12C      		mov r15,__zero_reg__
 319 00c2 01E0      		ldi r16,lo8(1)
 320 00c4 9C01      		movw r18,r24
 321 00c6 45E5      		ldi r20,lo8(85)
 322 00c8 50E0      		ldi r21,0
 323 00ca 60E0      		ldi r22,lo8(.LC1)
 324 00cc 70E0      		ldi r23,hi8(.LC1)
 325 00ce 80E0      		ldi r24,lo8(gs(vTaskSonar))
 326 00d0 90E0      		ldi r25,hi8(gs(vTaskSonar))
 327 00d2 0E94 0000 		call xTaskGenericCreate
  65:main.c        ****                 (void *) val1, 1, NULL );
  66:main.c        **** 
  67:main.c        ****    xTaskCreate( (pdTASK_CODE) vTaskUARTWrite, (signed char *) "T0", configMINIMAL_STACK_SIZE,
 329               	.LM16:
 330 00d6 8B81      		ldd r24,Y+3
 331 00d8 9C81      		ldd r25,Y+4
 332 00da A12C      		mov r10,__zero_reg__
 333 00dc B12C      		mov r11,__zero_reg__
 334 00de C12C      		mov r12,__zero_reg__
 335 00e0 D12C      		mov r13,__zero_reg__
 336 00e2 E12C      		mov r14,__zero_reg__
 337 00e4 F12C      		mov r15,__zero_reg__
 338 00e6 01E0      		ldi r16,lo8(1)
 339 00e8 9C01      		movw r18,r24
 340 00ea 45E5      		ldi r20,lo8(85)
 341 00ec 50E0      		ldi r21,0
 342 00ee 60E0      		ldi r22,lo8(.LC1)
 343 00f0 70E0      		ldi r23,hi8(.LC1)
 344 00f2 80E0      		ldi r24,lo8(gs(vTaskUARTWrite))
 345 00f4 90E0      		ldi r25,hi8(gs(vTaskUARTWrite))
 346 00f6 0E94 0000 		call xTaskGenericCreate
  68:main.c        ****    				(void *) val1, 1, NULL);
  69:main.c        **** 
  70:main.c        ****    xTaskCreate( (pdTASK_CODE) vTaskUARTRead, (signed char *) "T0", configMINIMAL_STACK_SIZE,
 348               	.LM17:
 349 00fa 8B81      		ldd r24,Y+3
 350 00fc 9C81      		ldd r25,Y+4
 351 00fe A12C      		mov r10,__zero_reg__
 352 0100 B12C      		mov r11,__zero_reg__
 353 0102 C12C      		mov r12,__zero_reg__
 354 0104 D12C      		mov r13,__zero_reg__
 355 0106 E12C      		mov r14,__zero_reg__
 356 0108 F12C      		mov r15,__zero_reg__
 357 010a 01E0      		ldi r16,lo8(1)
 358 010c 9C01      		movw r18,r24
 359 010e 45E5      		ldi r20,lo8(85)
 360 0110 50E0      		ldi r21,0
 361 0112 60E0      		ldi r22,lo8(.LC1)
 362 0114 70E0      		ldi r23,hi8(.LC1)
 363 0116 80E0      		ldi r24,lo8(gs(vTaskUARTRead))
 364 0118 90E0      		ldi r25,hi8(gs(vTaskUARTRead))
 365 011a 0E94 0000 		call xTaskGenericCreate
  71:main.c        ****    				(void *) val1, 1, NULL);
  72:main.c        **** 
  73:main.c        ****     
  74:main.c        ****     //- kick off the scheduler
  75:main.c        **** 	vTaskStartScheduler();
 367               	.LM18:
 368 011e 0E94 0000 		call vTaskStartScheduler
  76:main.c        ****     
  77:main.c        **** 	return 0;
 370               	.LM19:
 371 0122 80E0      		ldi r24,0
 372 0124 90E0      		ldi r25,0
 373               	/* epilogue start */
  78:main.c        **** }
 375               	.LM20:
 376 0126 2696      		adiw r28,6
 377 0128 0FB6      		in __tmp_reg__,__SREG__
 378 012a F894      		cli
 379 012c DEBF      		out __SP_H__,r29
 380 012e 0FBE      		out __SREG__,__tmp_reg__
 381 0130 CDBF      		out __SP_L__,r28
 382 0132 DF91      		pop r29
 383 0134 CF91      		pop r28
 384 0136 0F91      		pop r16
 385 0138 FF90      		pop r15
 386 013a EF90      		pop r14
 387 013c DF90      		pop r13
 388 013e CF90      		pop r12
 389 0140 BF90      		pop r11
 390 0142 AF90      		pop r10
 391 0144 0895      		ret
 398               	.Lscope2:
 400               		.stabd	78,0,0
 401               		.section	.rodata
 402               	.LC0:
 403 0003 30        		.byte	48
 404 0004 31        		.byte	49
 405 0005 32        		.byte	50
 406 0006 33        		.byte	51
 407 0007 34        		.byte	52
 408 0008 35        		.byte	53
 409 0009 36        		.byte	54
 410 000a 37        		.byte	55
 411 000b 38        		.byte	56
 412 000c 39        		.byte	57
 413 000d 41        		.byte	65
 414 000e 42        		.byte	66
 415 000f 43        		.byte	67
 416 0010 44        		.byte	68
 417 0011 45        		.byte	69
 418 0012 46        		.byte	70
 419               		.text
 422               	.global	printHex
 424               	printHex:
 425               		.stabd	46,0,0
  79:main.c        **** /*-----------------------------------------------------------*/
  80:main.c        **** 
  81:main.c        **** void printHex(int i){
 427               	.LM21:
 428               	.LFBB3:
 429 0146 CF93      		push r28
 430 0148 DF93      		push r29
 431 014a CDB7      		in r28,__SP_L__
 432 014c DEB7      		in r29,__SP_H__
 433 014e 6297      		sbiw r28,18
 434 0150 0FB6      		in __tmp_reg__,__SREG__
 435 0152 F894      		cli
 436 0154 DEBF      		out __SP_H__,r29
 437 0156 0FBE      		out __SREG__,__tmp_reg__
 438 0158 CDBF      		out __SP_L__,r28
 439               	/* prologue: function */
 440               	/* frame size = 18 */
 441               	/* stack size = 20 */
 442               	.L__stack_usage = 20
 443 015a 9A8B      		std Y+18,r25
 444 015c 898B      		std Y+17,r24
  82:main.c        **** 	char hex[] = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
 446               	.LM22:
 447 015e 20E1      		ldi r18,lo8(16)
 448 0160 E0E0      		ldi r30,lo8(.LC0)
 449 0162 F0E0      		ldi r31,hi8(.LC0)
 450 0164 CE01      		movw r24,r28
 451 0166 0196      		adiw r24,1
 452 0168 DC01      		movw r26,r24
 453               		0:
 454 016a 0190      		ld r0,Z+
 455 016c 0D92      		st X+,r0
 456 016e 2A95      		dec r18
 457 0170 01F4      		brne 0b
  83:main.c        **** 
  84:main.c        **** 	USART_Write(hex[(i&0xF000) >> 12]);
 459               	.LM23:
 460 0172 8989      		ldd r24,Y+17
 461 0174 9A89      		ldd r25,Y+18
 462 0176 892F      		mov r24,r25
 463 0178 9927      		clr r25
 464 017a 8295      		swap r24
 465 017c 8F70      		andi r24,0x0f
 466 017e 9E01      		movw r18,r28
 467 0180 2F5F      		subi r18,-1
 468 0182 3F4F      		sbci r19,-1
 469 0184 820F      		add r24,r18
 470 0186 931F      		adc r25,r19
 471 0188 FC01      		movw r30,r24
 472 018a 8081      		ld r24,Z
 473 018c 0E94 0000 		call USART_Write
  85:main.c        **** 	USART_Write(hex[(i&0xF00) >> 8]);
 475               	.LM24:
 476 0190 8989      		ldd r24,Y+17
 477 0192 9A89      		ldd r25,Y+18
 478 0194 8827      		clr r24
 479 0196 9F70      		andi r25,15
 480 0198 892F      		mov r24,r25
 481 019a 990F      		lsl r25
 482 019c 990B      		sbc r25,r25
 483 019e 9E01      		movw r18,r28
 484 01a0 2F5F      		subi r18,-1
 485 01a2 3F4F      		sbci r19,-1
 486 01a4 820F      		add r24,r18
 487 01a6 931F      		adc r25,r19
 488 01a8 FC01      		movw r30,r24
 489 01aa 8081      		ld r24,Z
 490 01ac 0E94 0000 		call USART_Write
  86:main.c        **** 	USART_Write(hex[(i&0xF0) >> 4]);
 492               	.LM25:
 493 01b0 8989      		ldd r24,Y+17
 494 01b2 9A89      		ldd r25,Y+18
 495 01b4 807F      		andi r24,240
 496 01b6 9927      		clr r25
 497 01b8 9595      		asr r25
 498 01ba 8795      		ror r24
 499 01bc 9595      		asr r25
 500 01be 8795      		ror r24
 501 01c0 9595      		asr r25
 502 01c2 8795      		ror r24
 503 01c4 9595      		asr r25
 504 01c6 8795      		ror r24
 505 01c8 9E01      		movw r18,r28
 506 01ca 2F5F      		subi r18,-1
 507 01cc 3F4F      		sbci r19,-1
 508 01ce 820F      		add r24,r18
 509 01d0 931F      		adc r25,r19
 510 01d2 FC01      		movw r30,r24
 511 01d4 8081      		ld r24,Z
 512 01d6 0E94 0000 		call USART_Write
  87:main.c        **** 	USART_Write(hex[i&0xF]);
 514               	.LM26:
 515 01da 8989      		ldd r24,Y+17
 516 01dc 9A89      		ldd r25,Y+18
 517 01de 8F70      		andi r24,15
 518 01e0 9927      		clr r25
 519 01e2 9E01      		movw r18,r28
 520 01e4 2F5F      		subi r18,-1
 521 01e6 3F4F      		sbci r19,-1
 522 01e8 820F      		add r24,r18
 523 01ea 931F      		adc r25,r19
 524 01ec FC01      		movw r30,r24
 525 01ee 8081      		ld r24,Z
 526 01f0 0E94 0000 		call USART_Write
 527               	/* epilogue start */
  88:main.c        **** 
  89:main.c        **** }
 529               	.LM27:
 530 01f4 6296      		adiw r28,18
 531 01f6 0FB6      		in __tmp_reg__,__SREG__
 532 01f8 F894      		cli
 533 01fa DEBF      		out __SP_H__,r29
 534 01fc 0FBE      		out __SREG__,__tmp_reg__
 535 01fe CDBF      		out __SP_L__,r28
 536 0200 DF91      		pop r29
 537 0202 CF91      		pop r28
 538 0204 0895      		ret
 543               	.Lscope3:
 545               		.stabd	78,0,0
 548               	.global	printNum
 550               	printNum:
 551               		.stabd	46,0,0
  90:main.c        **** 
  91:main.c        **** void printNum(unsigned char i){
 553               	.LM28:
 554               	.LFBB4:
 555 0206 CF93      		push r28
 556 0208 DF93      		push r29
 557 020a CDB7      		in r28,__SP_L__
 558 020c DEB7      		in r29,__SP_H__
 559 020e 2D97      		sbiw r28,13
 560 0210 0FB6      		in __tmp_reg__,__SREG__
 561 0212 F894      		cli
 562 0214 DEBF      		out __SP_H__,r29
 563 0216 0FBE      		out __SREG__,__tmp_reg__
 564 0218 CDBF      		out __SP_L__,r28
 565               	/* prologue: function */
 566               	/* frame size = 13 */
 567               	/* stack size = 15 */
 568               	.L__stack_usage = 15
 569 021a 8D87      		std Y+13,r24
  92:main.c        ****     
  93:main.c        ****     char str[10];
  94:main.c        ****     memset(str,0,10);
 571               	.LM29:
 572 021c CE01      		movw r24,r28
 573 021e 0396      		adiw r24,3
 574 0220 4AE0      		ldi r20,lo8(10)
 575 0222 50E0      		ldi r21,0
 576 0224 60E0      		ldi r22,0
 577 0226 70E0      		ldi r23,0
 578 0228 0E94 0000 		call memset
  95:main.c        ****     itoa(i,str,9);
 580               	.LM30:
 581 022c 8D85      		ldd r24,Y+13
 582 022e 882F      		mov r24,r24
 583 0230 90E0      		ldi r25,0
 584 0232 9E01      		movw r18,r28
 585 0234 2D5F      		subi r18,-3
 586 0236 3F4F      		sbci r19,-1
 587 0238 49E0      		ldi r20,lo8(9)
 588 023a 50E0      		ldi r21,0
 589 023c B901      		movw r22,r18
 590 023e 0E94 0000 		call itoa
  96:main.c        ****     char * irr = str;
 592               	.LM31:
 593 0242 CE01      		movw r24,r28
 594 0244 0396      		adiw r24,3
 595 0246 9A83      		std Y+2,r25
 596 0248 8983      		std Y+1,r24
  97:main.c        ****     while(*irr){
 598               	.LM32:
 599 024a 00C0      		rjmp .L6
 600               	.L7:
  98:main.c        ****         USART_Write((unsigned char )*irr);
 602               	.LM33:
 603 024c 8981      		ldd r24,Y+1
 604 024e 9A81      		ldd r25,Y+2
 605 0250 FC01      		movw r30,r24
 606 0252 8081      		ld r24,Z
 607 0254 0E94 0000 		call USART_Write
  99:main.c        ****         irr++;
 609               	.LM34:
 610 0258 8981      		ldd r24,Y+1
 611 025a 9A81      		ldd r25,Y+2
 612 025c 0196      		adiw r24,1
 613 025e 9A83      		std Y+2,r25
 614 0260 8983      		std Y+1,r24
 615               	.L6:
  97:main.c        ****     while(*irr){
 617               	.LM35:
 618 0262 8981      		ldd r24,Y+1
 619 0264 9A81      		ldd r25,Y+2
 620 0266 FC01      		movw r30,r24
 621 0268 8081      		ld r24,Z
 622 026a 8823      		tst r24
 623 026c 01F4      		brne .L7
 624               	/* epilogue start */
 100:main.c        ****     }
 101:main.c        ****     
 102:main.c        **** }
 626               	.LM36:
 627 026e 2D96      		adiw r28,13
 628 0270 0FB6      		in __tmp_reg__,__SREG__
 629 0272 F894      		cli
 630 0274 DEBF      		out __SP_H__,r29
 631 0276 0FBE      		out __SREG__,__tmp_reg__
 632 0278 CDBF      		out __SP_L__,r28
 633 027a DF91      		pop r29
 634 027c CF91      		pop r28
 635 027e 0895      		ret
 641               	.Lscope4:
 643               		.stabd	78,0,0
 645               	.global	__vector_50
 647               	__vector_50:
 648               		.stabd	46,0,0
 103:main.c        **** 
 104:main.c        **** ISR(TIMER5_OVF_vect){
 650               	.LM37:
 651               	.LFBB5:
 652 0280 1F92      		push r1
 653 0282 0F92      		push r0
 654 0284 0090 5F00 		lds r0,95
 655 0288 0F92      		push r0
 656 028a 1124      		clr __zero_reg__
 657 028c 0090 5B00 		lds r0,91
 658 0290 0F92      		push r0
 659 0292 2F93      		push r18
 660 0294 3F93      		push r19
 661 0296 8F93      		push r24
 662 0298 9F93      		push r25
 663 029a EF93      		push r30
 664 029c FF93      		push r31
 665 029e CF93      		push r28
 666 02a0 DF93      		push r29
 667 02a2 CDB7      		in r28,__SP_L__
 668 02a4 DEB7      		in r29,__SP_H__
 669               	/* prologue: Signal */
 670               	/* frame size = 0 */
 671               	/* stack size = 12 */
 672               	.L__stack_usage = 12
 105:main.c        **** 
 106:main.c        **** 	PORTB ^= 0xFF;
 674               	.LM38:
 675 02a6 85E2      		ldi r24,lo8(37)
 676 02a8 90E0      		ldi r25,0
 677 02aa 25E2      		ldi r18,lo8(37)
 678 02ac 30E0      		ldi r19,0
 679 02ae F901      		movw r30,r18
 680 02b0 2081      		ld r18,Z
 681 02b2 2095      		com r18
 682 02b4 FC01      		movw r30,r24
 683 02b6 2083      		st Z,r18
 107:main.c        **** 	TCNT3L = 0;
 685               	.LM39:
 686 02b8 84E9      		ldi r24,lo8(-108)
 687 02ba 90E0      		ldi r25,0
 688 02bc FC01      		movw r30,r24
 689 02be 1082      		st Z,__zero_reg__
 108:main.c        **** 	TCNT3H = 0;
 691               	.LM40:
 692 02c0 85E9      		ldi r24,lo8(-107)
 693 02c2 90E0      		ldi r25,0
 694 02c4 FC01      		movw r30,r24
 695 02c6 1082      		st Z,__zero_reg__
 696               	/* epilogue start */
 109:main.c        **** 
 110:main.c        **** }
 698               	.LM41:
 699 02c8 DF91      		pop r29
 700 02ca CF91      		pop r28
 701 02cc FF91      		pop r31
 702 02ce EF91      		pop r30
 703 02d0 9F91      		pop r25
 704 02d2 8F91      		pop r24
 705 02d4 3F91      		pop r19
 706 02d6 2F91      		pop r18
 707 02d8 0F90      		pop r0
 708 02da 0092 5B00 		sts 91,r0
 709 02de 0F90      		pop r0
 710 02e0 0092 5F00 		sts 95,r0
 711 02e4 0F90      		pop r0
 712 02e6 1F90      		pop r1
 713 02e8 1895      		reti
 715               	.Lscope5:
 717               		.stabd	78,0,0
 719               	.global	getTimerCount2
 721               	getTimerCount2:
 722               		.stabd	46,0,0
 111:main.c        **** 
 112:main.c        **** unsigned int getTimerCount2(){
 724               	.LM42:
 725               	.LFBB6:
 726 02ea CF93      		push r28
 727 02ec DF93      		push r29
 728 02ee CDB7      		in r28,__SP_L__
 729 02f0 DEB7      		in r29,__SP_H__
 730               	/* prologue: function */
 731               	/* frame size = 0 */
 732               	/* stack size = 2 */
 733               	.L__stack_usage = 2
 113:main.c        **** 
 114:main.c        **** 	//volatile char timerLow = TCNT3L;
 115:main.c        **** 
 116:main.c        **** 	return TCNT0;
 735               	.LM43:
 736 02f2 86E4      		ldi r24,lo8(70)
 737 02f4 90E0      		ldi r25,0
 738 02f6 FC01      		movw r30,r24
 739 02f8 8081      		ld r24,Z
 740 02fa 882F      		mov r24,r24
 741 02fc 90E0      		ldi r25,0
 742               	/* epilogue start */
 117:main.c        **** 
 118:main.c        **** }
 744               	.LM44:
 745 02fe DF91      		pop r29
 746 0300 CF91      		pop r28
 747 0302 0895      		ret
 749               	.Lscope6:
 751               		.stabd	78,0,0
 754               	.global	vTaskFunction_1
 756               	vTaskFunction_1:
 757               		.stabd	46,0,0
 119:main.c        **** 
 120:main.c        **** void vTaskFunction_1(void *pvParameters)
 121:main.c        **** {	
 759               	.LM45:
 760               	.LFBB7:
 761 0304 CF93      		push r28
 762 0306 DF93      		push r29
 763 0308 1F92      		push __zero_reg__
 764 030a 1F92      		push __zero_reg__
 765 030c CDB7      		in r28,__SP_L__
 766 030e DEB7      		in r29,__SP_H__
 767               	/* prologue: function */
 768               	/* frame size = 2 */
 769               	/* stack size = 4 */
 770               	.L__stack_usage = 4
 771 0310 9A83      		std Y+2,r25
 772 0312 8983      		std Y+1,r24
 122:main.c        ****     USART_Init(9600, 16000000);
 774               	.LM46:
 775 0314 40E0      		ldi r20,0
 776 0316 54E2      		ldi r21,lo8(36)
 777 0318 64EF      		ldi r22,lo8(-12)
 778 031a 70E0      		ldi r23,0
 779 031c 80E8      		ldi r24,lo8(-128)
 780 031e 95E2      		ldi r25,lo8(37)
 781 0320 0E94 0000 		call USART_Init
 782               	.L12:
 123:main.c        **** 	//static const char* str = "Hello World\n";
 124:main.c        **** 	for(;;){
 125:main.c        **** 		//PORTB = 0;
 126:main.c        **** 		//USART_AddToQueue('%');
 127:main.c        **** 		//USART_TransmitString("Hello World!\n");
 128:main.c        **** 
 129:main.c        **** 		//USART_TransmitString("H\n");
 130:main.c        **** 		vTaskDelay(25);
 784               	.LM47:
 785 0324 89E1      		ldi r24,lo8(25)
 786 0326 90E0      		ldi r25,0
 787 0328 0E94 0000 		call vTaskDelay
 131:main.c        **** 	}
 789               	.LM48:
 790 032c 00C0      		rjmp .L12
 792               	.Lscope7:
 794               		.stabd	78,0,0
 796               	.global	vIO_init
 798               	vIO_init:
 799               		.stabd	46,0,0
 132:main.c        **** 	/*for(;;){
 133:main.c        **** 		printNum(getTimerCount2());
 134:main.c        **** 		USART_Write('\n');
 135:main.c        **** 	}*/
 136:main.c        **** 
 137:main.c        ****     for (;;)  {
 138:main.c        **** //        PORTB ^=  0xff;j
 139:main.c        **** 		//PCMSK2 = 1;
 140:main.c        **** 
 141:main.c        ****       printNum(getSonarData(0));
 142:main.c        **** 		USART_Write(' ');
 143:main.c        **** 		printNum(getSonarData(1));
 144:main.c        **** 		USART_Write('\n');
 145:main.c        ****       vTaskDelay(25);
 146:main.c        ****         /* Get and return received data from buffer */
 147:main.c        ****         // UDR0;
 148:main.c        ****     }
 149:main.c        **** }
 150:main.c        **** 
 151:main.c        **** void vIO_init(void)
 152:main.c        **** {
 801               	.LM49:
 802               	.LFBB8:
 803 032e CF93      		push r28
 804 0330 DF93      		push r29
 805 0332 CDB7      		in r28,__SP_L__
 806 0334 DEB7      		in r29,__SP_H__
 807               	/* prologue: function */
 808               	/* frame size = 0 */
 809               	/* stack size = 2 */
 810               	.L__stack_usage = 2
 153:main.c        ****     //- set PortB as output
 154:main.c        **** 	DDRB = 0xFF; 
 812               	.LM50:
 813 0336 84E2      		ldi r24,lo8(36)
 814 0338 90E0      		ldi r25,0
 815 033a 2FEF      		ldi r18,lo8(-1)
 816 033c FC01      		movw r30,r24
 817 033e 2083      		st Z,r18
 155:main.c        ****     PORTB = 0; 
 819               	.LM51:
 820 0340 85E2      		ldi r24,lo8(37)
 821 0342 90E0      		ldi r25,0
 822 0344 FC01      		movw r30,r24
 823 0346 1082      		st Z,__zero_reg__
 824               	/* epilogue start */
 156:main.c        **** }
 826               	.LM52:
 827 0348 DF91      		pop r29
 828 034a CF91      		pop r28
 829 034c 0895      		ret
 831               	.Lscope8:
 833               		.stabd	78,0,0
 837               	.Letext0:
 838               		.ident	"GCC: (GNU) 4.8.2"
 839               	.global __do_copy_data
 840               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cctcqzxF.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cctcqzxF.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cctcqzxF.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cctcqzxF.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/cctcqzxF.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cctcqzxF.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cctcqzxF.s:163    .bss:0000000000000000 count
                            *COM*:0000000000000002 sonarTime
     /tmp/cctcqzxF.s:170    .text:0000000000000000 vApplicationTickHook
     /tmp/cctcqzxF.s:207    .text:0000000000000020 main
     /tmp/cctcqzxF.s:798    .text:000000000000032e vIO_init
     /tmp/cctcqzxF.s:756    .text:0000000000000304 vTaskFunction_1
     /tmp/cctcqzxF.s:424    .text:0000000000000146 printHex
     /tmp/cctcqzxF.s:550    .text:0000000000000206 printNum
     /tmp/cctcqzxF.s:647    .text:0000000000000280 __vector_50
     /tmp/cctcqzxF.s:721    .text:00000000000002ea getTimerCount2

UNDEFINED SYMBOLS
xTaskGenericCreate
vTaskSonar
vTaskUARTWrite
vTaskUARTRead
vTaskStartScheduler
USART_Write
memset
itoa
USART_Init
vTaskDelay
__do_copy_data
__do_clear_bss
