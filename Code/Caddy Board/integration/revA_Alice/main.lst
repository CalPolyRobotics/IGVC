   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 125               	.global	count
 126               	.global	count
 127               		.section .bss
 130               	count:
 131 0000 0000      		.skip 2,0
 132               		.text
 134               	.global	vApplicationTickHook
 136               	vApplicationTickHook:
 137               		.stabd	46,0,0
   1:main.c        **** /*
   2:main.c        ****  FreeRTOS V6.1.0
   3:main.c        ****  
   4:main.c        ****  This is a basic RTOS program. It turns on the LEDs.
   5:main.c        ****  Nothing too exciting.
   6:main.c        ****  
   7:main.c        ****  */
   8:main.c        **** 
   9:main.c        **** #include <stdint.h>
  10:main.c        **** #include <avr/io.h>
  11:main.c        **** #include <string.h>
  12:main.c        **** #include <stdlib.h>
  13:main.c        **** #include <stdio.h>
  14:main.c        **** #include <math.h>
  15:main.c        **** #include "FreeRTOS.h"
  16:main.c        **** #include <avr/interrupt.h>
  17:main.c        **** #include "task.h"
  18:main.c        **** #include "usart.h"
  19:main.c        **** #include "Components/Sonar/Sonar.h"
  20:main.c        **** #include "queue.h"
  21:main.c        **** 
  22:main.c        **** void vTaskFunction_1(void *pvParameters);
  23:main.c        **** void vIO_init(void);
  24:main.c        **** void vApplicationTickHook();
  25:main.c        **** void printNum(unsigned char i);
  26:main.c        **** void printHex(int i);
  27:main.c        **** 
  28:main.c        **** int count = 0;
  29:main.c        **** 
  30:main.c        **** int sonarTime;
  31:main.c        **** 
  32:main.c        **** void vApplicationTickHook()
  33:main.c        **** {
 139               	.LM0:
 140               	.LFBB1:
 141 0000 DF93      		push r29
 142 0002 CF93      		push r28
 143 0004 CDB7      		in r28,__SP_L__
 144 0006 DEB7      		in r29,__SP_H__
 145               	/* prologue: function */
 146               	/* frame size = 0 */
  34:main.c        ****     count++;
 148               	.LM1:
 149 0008 8091 0000 		lds r24,count
 150 000c 9091 0000 		lds r25,(count)+1
 151 0010 0196      		adiw r24,1
 152 0012 9093 0000 		sts (count)+1,r25
 153 0016 8093 0000 		sts count,r24
 154               	/* epilogue start */
  35:main.c        **** }
 156               	.LM2:
 157 001a CF91      		pop r28
 158 001c DF91      		pop r29
 159 001e 0895      		ret
 161               	.Lscope1:
 163               		.stabd	78,0,0
 165               	.global	vApplicationStackOverflowHook
 167               	vApplicationStackOverflowHook:
 168               		.stabd	46,0,0
  36:main.c        **** 
  37:main.c        **** void vApplicationStackOverflowHook(){
 170               	.LM3:
 171               	.LFBB2:
 172 0020 DF93      		push r29
 173 0022 CF93      		push r28
 174 0024 CDB7      		in r28,__SP_L__
 175 0026 DEB7      		in r29,__SP_H__
 176               	/* prologue: function */
 177               	/* frame size = 0 */
 178               	/* epilogue start */
  38:main.c        **** 	return;
  39:main.c        **** }
 180               	.LM4:
 181 0028 CF91      		pop r28
 182 002a DF91      		pop r29
 183 002c 0895      		ret
 185               	.Lscope2:
 187               		.stabd	78,0,0
 188               		.data
 189               	.LC0:
 190 0000 5430 00   		.string	"T0"
 191               	.LC1:
 192 0003 5431 00   		.string	"T1"
 193               	.LC2:
 194 0006 5432 00   		.string	"T2"
 195               	.LC3:
 196 0009 5433 00   		.string	"T3"
 197               		.text
 199               	.global	main
 201               	main:
 202               		.stabd	46,0,0
  40:main.c        **** /*-----------------------------------------------------------*/
  41:main.c        **** 
  42:main.c        **** int main( void )
  43:main.c        **** {
 204               	.LM5:
 205               	.LFBB3:
 206 002e AF92      		push r10
 207 0030 BF92      		push r11
 208 0032 CF92      		push r12
 209 0034 DF92      		push r13
 210 0036 EF92      		push r14
 211 0038 FF92      		push r15
 212 003a 0F93      		push r16
 213 003c DF93      		push r29
 214 003e CF93      		push r28
 215 0040 00D0      		rcall .
 216 0042 00D0      		rcall .
 217 0044 CDB7      		in r28,__SP_L__
 218 0046 DEB7      		in r29,__SP_H__
 219               	/* prologue: function */
 220               	/* frame size = 6 */
  44:main.c        ****     
  45:main.c        ****     //- wimpy variable defs
  46:main.c        **** 	uint8_t val[2] = {0x3F, 0xFE};
 222               	.LM6:
 223 0048 8FE3      		ldi r24,lo8(63)
 224 004a 8D83      		std Y+5,r24
 225 004c 8EEF      		ldi r24,lo8(-2)
 226 004e 8E83      		std Y+6,r24
  47:main.c        ****     uint8_t *val0, *val1;
  48:main.c        ****     
  49:main.c        **** 	//- avoid pesky warnings...
  50:main.c        **** 	val0 = val + 0;
 228               	.LM7:
 229 0050 CE01      		movw r24,r28
 230 0052 0596      		adiw r24,5
 231 0054 9C83      		std Y+4,r25
 232 0056 8B83      		std Y+3,r24
  51:main.c        **** 	val1 = val + 1;
 234               	.LM8:
 235 0058 CE01      		movw r24,r28
 236 005a 0596      		adiw r24,5
 237 005c 0196      		adiw r24,1
 238 005e 9A83      		std Y+2,r25
 239 0060 8983      		std Y+1,r24
  52:main.c        ****     
  53:main.c        **** 	DDRD = 0xFF;
 241               	.LM9:
 242 0062 EAE2      		ldi r30,lo8(42)
 243 0064 F0E0      		ldi r31,hi8(42)
 244 0066 8FEF      		ldi r24,lo8(-1)
 245 0068 8083      		st Z,r24
  54:main.c        **** 	DDRE = 0xFF;
 247               	.LM10:
 248 006a EDE2      		ldi r30,lo8(45)
 249 006c F0E0      		ldi r31,hi8(45)
 250 006e 8FEF      		ldi r24,lo8(-1)
 251 0070 8083      		st Z,r24
  55:main.c        **** 	DDRK = 0;
 253               	.LM11:
 254 0072 E7E0      		ldi r30,lo8(263)
 255 0074 F1E0      		ldi r31,hi8(263)
 256 0076 1082      		st Z,__zero_reg__
  56:main.c        **** 
  57:main.c        **** 	PORTD = 0;
 258               	.LM12:
 259 0078 EBE2      		ldi r30,lo8(43)
 260 007a F0E0      		ldi r31,hi8(43)
 261 007c 1082      		st Z,__zero_reg__
  58:main.c        **** 	PORTE = 0;
 263               	.LM13:
 264 007e EEE2      		ldi r30,lo8(46)
 265 0080 F0E0      		ldi r31,hi8(46)
 266 0082 1082      		st Z,__zero_reg__
  59:main.c        **** 	PORTK = 2;
 268               	.LM14:
 269 0084 E8E0      		ldi r30,lo8(264)
 270 0086 F1E0      		ldi r31,hi8(264)
 271 0088 82E0      		ldi r24,lo8(2)
 272 008a 8083      		st Z,r24
  60:main.c        **** 
  61:main.c        ****     //- init IO with goodness
  62:main.c        **** 	vIO_init();
 274               	.LM15:
 275 008c 0E94 0000 		call vIO_init
  63:main.c        **** 
  64:main.c        **** 	//- Create a 
  65:main.c        **** 	xTaskCreate( (pdTASK_CODE) vTaskFunction_1, (signed char *) "T0", configMINIMAL_STACK_SIZE+1000,
 277               	.LM16:
 278 0090 80E0      		ldi r24,lo8(gs(vTaskFunction_1))
 279 0092 90E0      		ldi r25,hi8(gs(vTaskFunction_1))
 280 0094 20E0      		ldi r18,lo8(.LC0)
 281 0096 30E0      		ldi r19,hi8(.LC0)
 282 0098 E981      		ldd r30,Y+1
 283 009a FA81      		ldd r31,Y+2
 284 009c B901      		movw r22,r18
 285 009e 4DE3      		ldi r20,lo8(1085)
 286 00a0 54E0      		ldi r21,hi8(1085)
 287 00a2 9F01      		movw r18,r30
 288 00a4 01E0      		ldi r16,lo8(1)
 289 00a6 EE24      		clr r14
 290 00a8 FF24      		clr r15
 291 00aa CC24      		clr r12
 292 00ac DD24      		clr r13
 293 00ae AA24      		clr r10
 294 00b0 BB24      		clr r11
 295 00b2 0E94 0000 		call xTaskGenericCreate
  66:main.c        ****                 (void *) val1, 1, NULL );
  67:main.c        ****     
  68:main.c        ****    xTaskCreate( (pdTASK_CODE) vTaskSonar, (signed char *) "T1", configMINIMAL_STACK_SIZE+1000,
 297               	.LM17:
 298 00b6 80E0      		ldi r24,lo8(gs(vTaskSonar))
 299 00b8 90E0      		ldi r25,hi8(gs(vTaskSonar))
 300 00ba 20E0      		ldi r18,lo8(.LC1)
 301 00bc 30E0      		ldi r19,hi8(.LC1)
 302 00be E981      		ldd r30,Y+1
 303 00c0 FA81      		ldd r31,Y+2
 304 00c2 B901      		movw r22,r18
 305 00c4 4DE3      		ldi r20,lo8(1085)
 306 00c6 54E0      		ldi r21,hi8(1085)
 307 00c8 9F01      		movw r18,r30
 308 00ca 01E0      		ldi r16,lo8(1)
 309 00cc EE24      		clr r14
 310 00ce FF24      		clr r15
 311 00d0 CC24      		clr r12
 312 00d2 DD24      		clr r13
 313 00d4 AA24      		clr r10
 314 00d6 BB24      		clr r11
 315 00d8 0E94 0000 		call xTaskGenericCreate
  69:main.c        ****                 (void *) val1, 1, NULL );
  70:main.c        **** 
  71:main.c        ****    xTaskCreate( (pdTASK_CODE) vTaskUSARTWrite, (signed char *) "T2", configMINIMAL_STACK_SIZE+1000,
 317               	.LM18:
 318 00dc 80E0      		ldi r24,lo8(gs(vTaskUSARTWrite))
 319 00de 90E0      		ldi r25,hi8(gs(vTaskUSARTWrite))
 320 00e0 20E0      		ldi r18,lo8(.LC2)
 321 00e2 30E0      		ldi r19,hi8(.LC2)
 322 00e4 E981      		ldd r30,Y+1
 323 00e6 FA81      		ldd r31,Y+2
 324 00e8 B901      		movw r22,r18
 325 00ea 4DE3      		ldi r20,lo8(1085)
 326 00ec 54E0      		ldi r21,hi8(1085)
 327 00ee 9F01      		movw r18,r30
 328 00f0 01E0      		ldi r16,lo8(1)
 329 00f2 EE24      		clr r14
 330 00f4 FF24      		clr r15
 331 00f6 CC24      		clr r12
 332 00f8 DD24      		clr r13
 333 00fa AA24      		clr r10
 334 00fc BB24      		clr r11
 335 00fe 0E94 0000 		call xTaskGenericCreate
  72:main.c        ****    				(void *) val1, 1, NULL);
  73:main.c        **** 
  74:main.c        ****    xTaskCreate( (pdTASK_CODE) vTaskUSARTRead, (signed char *) "T3", configMINIMAL_STACK_SIZE+1000,
 337               	.LM19:
 338 0102 80E0      		ldi r24,lo8(gs(vTaskUSARTRead))
 339 0104 90E0      		ldi r25,hi8(gs(vTaskUSARTRead))
 340 0106 20E0      		ldi r18,lo8(.LC3)
 341 0108 30E0      		ldi r19,hi8(.LC3)
 342 010a E981      		ldd r30,Y+1
 343 010c FA81      		ldd r31,Y+2
 344 010e B901      		movw r22,r18
 345 0110 4DE3      		ldi r20,lo8(1085)
 346 0112 54E0      		ldi r21,hi8(1085)
 347 0114 9F01      		movw r18,r30
 348 0116 01E0      		ldi r16,lo8(1)
 349 0118 EE24      		clr r14
 350 011a FF24      		clr r15
 351 011c CC24      		clr r12
 352 011e DD24      		clr r13
 353 0120 AA24      		clr r10
 354 0122 BB24      		clr r11
 355 0124 0E94 0000 		call xTaskGenericCreate
  75:main.c        ****    				(void *) val1, 1, NULL);
  76:main.c        **** 
  77:main.c        **** //   xTaskCreate( (pdTASK_CODE) vTaskUSARTLog, (signed char *) "T4", configMINIMAL_STACK_SIZE+1000,
  78:main.c        **** //   				(void *) val1, 1, NULL);
  79:main.c        ****     
  80:main.c        ****     //- kick off the scheduler
  81:main.c        **** 	vTaskStartScheduler();
 357               	.LM20:
 358 0128 0E94 0000 		call vTaskStartScheduler
  82:main.c        ****     
  83:main.c        **** 	return 0;
 360               	.LM21:
 361 012c 80E0      		ldi r24,lo8(0)
 362 012e 90E0      		ldi r25,hi8(0)
 363               	/* epilogue start */
  84:main.c        **** }
 365               	.LM22:
 366 0130 2696      		adiw r28,6
 367 0132 0FB6      		in __tmp_reg__,__SREG__
 368 0134 F894      		cli
 369 0136 DEBF      		out __SP_H__,r29
 370 0138 0FBE      		out __SREG__,__tmp_reg__
 371 013a CDBF      		out __SP_L__,r28
 372 013c CF91      		pop r28
 373 013e DF91      		pop r29
 374 0140 0F91      		pop r16
 375 0142 FF90      		pop r15
 376 0144 EF90      		pop r14
 377 0146 DF90      		pop r13
 378 0148 CF90      		pop r12
 379 014a BF90      		pop r11
 380 014c AF90      		pop r10
 381 014e 0895      		ret
 388               	.Lscope3:
 390               		.stabd	78,0,0
 391               		.data
 394               	C.2.2032:
 395 000c 30        		.byte	48
 396 000d 31        		.byte	49
 397 000e 32        		.byte	50
 398 000f 33        		.byte	51
 399 0010 34        		.byte	52
 400 0011 35        		.byte	53
 401 0012 36        		.byte	54
 402 0013 37        		.byte	55
 403 0014 38        		.byte	56
 404 0015 39        		.byte	57
 405 0016 41        		.byte	65
 406 0017 42        		.byte	66
 407 0018 43        		.byte	67
 408 0019 44        		.byte	68
 409 001a 45        		.byte	69
 410 001b 46        		.byte	70
 411               		.text
 414               	.global	printHex
 416               	printHex:
 417               		.stabd	46,0,0
  85:main.c        **** /*-----------------------------------------------------------*/
  86:main.c        **** 
  87:main.c        **** void printHex(int i){
 419               	.LM23:
 420               	.LFBB4:
 421 0150 DF93      		push r29
 422 0152 CF93      		push r28
 423 0154 CDB7      		in r28,__SP_L__
 424 0156 DEB7      		in r29,__SP_H__
 425 0158 6797      		sbiw r28,23
 426 015a 0FB6      		in __tmp_reg__,__SREG__
 427 015c F894      		cli
 428 015e DEBF      		out __SP_H__,r29
 429 0160 0FBE      		out __SREG__,__tmp_reg__
 430 0162 CDBF      		out __SP_L__,r28
 431               	/* prologue: function */
 432               	/* frame size = 23 */
 433 0164 9A8B      		std Y+18,r25
 434 0166 898B      		std Y+17,r24
  88:main.c        **** 	char hex[] = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
 436               	.LM24:
 437 0168 CE01      		movw r24,r28
 438 016a 0196      		adiw r24,1
 439 016c 9C8B      		std Y+20,r25
 440 016e 8B8B      		std Y+19,r24
 441 0170 E0E0      		ldi r30,lo8(C.2.2032)
 442 0172 F0E0      		ldi r31,hi8(C.2.2032)
 443 0174 FE8B      		std Y+22,r31
 444 0176 ED8B      		std Y+21,r30
 445 0178 F0E1      		ldi r31,lo8(16)
 446 017a FF8B      		std Y+23,r31
 447               	.L8:
 448 017c ED89      		ldd r30,Y+21
 449 017e FE89      		ldd r31,Y+22
 450 0180 0080      		ld r0,Z
 451 0182 8D89      		ldd r24,Y+21
 452 0184 9E89      		ldd r25,Y+22
 453 0186 0196      		adiw r24,1
 454 0188 9E8B      		std Y+22,r25
 455 018a 8D8B      		std Y+21,r24
 456 018c EB89      		ldd r30,Y+19
 457 018e FC89      		ldd r31,Y+20
 458 0190 0082      		st Z,r0
 459 0192 8B89      		ldd r24,Y+19
 460 0194 9C89      		ldd r25,Y+20
 461 0196 0196      		adiw r24,1
 462 0198 9C8B      		std Y+20,r25
 463 019a 8B8B      		std Y+19,r24
 464 019c 9F89      		ldd r25,Y+23
 465 019e 9150      		subi r25,lo8(-(-1))
 466 01a0 9F8B      		std Y+23,r25
 467 01a2 EF89      		ldd r30,Y+23
 468 01a4 EE23      		tst r30
 469 01a6 01F4      		brne .L8
  89:main.c        **** 
  90:main.c        **** 	USART_Write(hex[(i&0xF000) >> 12]);
 471               	.LM25:
 472 01a8 8989      		ldd r24,Y+17
 473 01aa 9A89      		ldd r25,Y+18
 474 01ac 9C01      		movw r18,r24
 475 01ae 232F      		mov r18,r19
 476 01b0 3327      		clr r19
 477 01b2 2295      		swap r18
 478 01b4 2F70      		andi r18,0x0f
 479 01b6 CE01      		movw r24,r28
 480 01b8 0196      		adiw r24,1
 481 01ba FC01      		movw r30,r24
 482 01bc E20F      		add r30,r18
 483 01be F31F      		adc r31,r19
 484 01c0 8081      		ld r24,Z
 485 01c2 0E94 0000 		call USART_Write
  91:main.c        **** 	USART_Write(hex[(i&0xF00) >> 8]);
 487               	.LM26:
 488 01c6 8989      		ldd r24,Y+17
 489 01c8 9A89      		ldd r25,Y+18
 490 01ca 8070      		andi r24,lo8(3840)
 491 01cc 9F70      		andi r25,hi8(3840)
 492 01ce 292F      		mov r18,r25
 493 01d0 3327      		clr r19
 494 01d2 27FD      		sbrc r18,7
 495 01d4 3A95      		dec r19
 496 01d6 CE01      		movw r24,r28
 497 01d8 0196      		adiw r24,1
 498 01da FC01      		movw r30,r24
 499 01dc E20F      		add r30,r18
 500 01de F31F      		adc r31,r19
 501 01e0 8081      		ld r24,Z
 502 01e2 0E94 0000 		call USART_Write
  92:main.c        **** 	USART_Write(hex[(i&0xF0) >> 4]);
 504               	.LM27:
 505 01e6 8989      		ldd r24,Y+17
 506 01e8 9A89      		ldd r25,Y+18
 507 01ea 807F      		andi r24,lo8(240)
 508 01ec 9070      		andi r25,hi8(240)
 509 01ee 9C01      		movw r18,r24
 510 01f0 3595      		asr r19
 511 01f2 2795      		ror r18
 512 01f4 3595      		asr r19
 513 01f6 2795      		ror r18
 514 01f8 3595      		asr r19
 515 01fa 2795      		ror r18
 516 01fc 3595      		asr r19
 517 01fe 2795      		ror r18
 518 0200 CE01      		movw r24,r28
 519 0202 0196      		adiw r24,1
 520 0204 FC01      		movw r30,r24
 521 0206 E20F      		add r30,r18
 522 0208 F31F      		adc r31,r19
 523 020a 8081      		ld r24,Z
 524 020c 0E94 0000 		call USART_Write
  93:main.c        **** 	USART_Write(hex[i&0xF]);
 526               	.LM28:
 527 0210 8989      		ldd r24,Y+17
 528 0212 9A89      		ldd r25,Y+18
 529 0214 9C01      		movw r18,r24
 530 0216 2F70      		andi r18,lo8(15)
 531 0218 3070      		andi r19,hi8(15)
 532 021a CE01      		movw r24,r28
 533 021c 0196      		adiw r24,1
 534 021e FC01      		movw r30,r24
 535 0220 E20F      		add r30,r18
 536 0222 F31F      		adc r31,r19
 537 0224 8081      		ld r24,Z
 538 0226 0E94 0000 		call USART_Write
 539               	/* epilogue start */
  94:main.c        **** 
  95:main.c        **** }
 541               	.LM29:
 542 022a 6796      		adiw r28,23
 543 022c 0FB6      		in __tmp_reg__,__SREG__
 544 022e F894      		cli
 545 0230 DEBF      		out __SP_H__,r29
 546 0232 0FBE      		out __SREG__,__tmp_reg__
 547 0234 CDBF      		out __SP_L__,r28
 548 0236 CF91      		pop r28
 549 0238 DF91      		pop r29
 550 023a 0895      		ret
 555               	.Lscope4:
 557               		.stabd	78,0,0
 560               	.global	printNum
 562               	printNum:
 563               		.stabd	46,0,0
  96:main.c        **** 
  97:main.c        **** void printNum(unsigned char i){
 565               	.LM30:
 566               	.LFBB5:
 567 023c DF93      		push r29
 568 023e CF93      		push r28
 569 0240 CDB7      		in r28,__SP_L__
 570 0242 DEB7      		in r29,__SP_H__
 571 0244 2D97      		sbiw r28,13
 572 0246 0FB6      		in __tmp_reg__,__SREG__
 573 0248 F894      		cli
 574 024a DEBF      		out __SP_H__,r29
 575 024c 0FBE      		out __SREG__,__tmp_reg__
 576 024e CDBF      		out __SP_L__,r28
 577               	/* prologue: function */
 578               	/* frame size = 13 */
 579 0250 8D87      		std Y+13,r24
  98:main.c        ****     
  99:main.c        ****     char str[10];
 100:main.c        ****     memset(str,0,10);
 581               	.LM31:
 582 0252 CE01      		movw r24,r28
 583 0254 0396      		adiw r24,3
 584 0256 60E0      		ldi r22,lo8(0)
 585 0258 70E0      		ldi r23,hi8(0)
 586 025a 4AE0      		ldi r20,lo8(10)
 587 025c 50E0      		ldi r21,hi8(10)
 588 025e 0E94 0000 		call memset
 101:main.c        ****     itoa(i,str,9);
 590               	.LM32:
 591 0262 8D85      		ldd r24,Y+13
 592 0264 882F      		mov r24,r24
 593 0266 90E0      		ldi r25,lo8(0)
 594 0268 9E01      		movw r18,r28
 595 026a 2D5F      		subi r18,lo8(-(3))
 596 026c 3F4F      		sbci r19,hi8(-(3))
 597 026e B901      		movw r22,r18
 598 0270 49E0      		ldi r20,lo8(9)
 599 0272 50E0      		ldi r21,hi8(9)
 600 0274 0E94 0000 		call itoa
 102:main.c        ****     char * irr = str;
 602               	.LM33:
 603 0278 CE01      		movw r24,r28
 604 027a 0396      		adiw r24,3
 605 027c 9A83      		std Y+2,r25
 606 027e 8983      		std Y+1,r24
 607 0280 00C0      		rjmp .L11
 608               	.L12:
 103:main.c        ****     while(*irr){
 104:main.c        ****         USART_Write((unsigned char )*irr);
 610               	.LM34:
 611 0282 E981      		ldd r30,Y+1
 612 0284 FA81      		ldd r31,Y+2
 613 0286 8081      		ld r24,Z
 614 0288 0E94 0000 		call USART_Write
 105:main.c        ****         irr++;
 616               	.LM35:
 617 028c 8981      		ldd r24,Y+1
 618 028e 9A81      		ldd r25,Y+2
 619 0290 0196      		adiw r24,1
 620 0292 9A83      		std Y+2,r25
 621 0294 8983      		std Y+1,r24
 622               	.L11:
 103:main.c        ****     while(*irr){
 624               	.LM36:
 625 0296 E981      		ldd r30,Y+1
 626 0298 FA81      		ldd r31,Y+2
 627 029a 8081      		ld r24,Z
 628 029c 8823      		tst r24
 629 029e 01F4      		brne .L12
 630               	/* epilogue start */
 106:main.c        ****     }
 107:main.c        ****     
 108:main.c        **** }
 632               	.LM37:
 633 02a0 2D96      		adiw r28,13
 634 02a2 0FB6      		in __tmp_reg__,__SREG__
 635 02a4 F894      		cli
 636 02a6 DEBF      		out __SP_H__,r29
 637 02a8 0FBE      		out __SREG__,__tmp_reg__
 638 02aa CDBF      		out __SP_L__,r28
 639 02ac CF91      		pop r28
 640 02ae DF91      		pop r29
 641 02b0 0895      		ret
 647               	.Lscope5:
 649               		.stabd	78,0,0
 651               	.global	__vector_50
 653               	__vector_50:
 654               		.stabd	46,0,0
 109:main.c        **** 
 110:main.c        **** ISR(TIMER5_OVF_vect){
 656               	.LM38:
 657               	.LFBB6:
 658 02b2 1F92      		push __zero_reg__
 659 02b4 0F92      		push r0
 660 02b6 0FB6      		in r0,__SREG__
 661 02b8 0F92      		push r0
 662 02ba 0090 5B00 		lds r0,91
 663 02be 0F92      		push r0
 664 02c0 1124      		clr __zero_reg__
 665 02c2 8F93      		push r24
 666 02c4 AF93      		push r26
 667 02c6 BF93      		push r27
 668 02c8 EF93      		push r30
 669 02ca FF93      		push r31
 670 02cc DF93      		push r29
 671 02ce CF93      		push r28
 672 02d0 CDB7      		in r28,__SP_L__
 673 02d2 DEB7      		in r29,__SP_H__
 674               	/* prologue: Signal */
 675               	/* frame size = 0 */
 111:main.c        **** 
 112:main.c        **** 	PORTB ^= 0xFF;
 677               	.LM39:
 678 02d4 A5E2      		ldi r26,lo8(37)
 679 02d6 B0E0      		ldi r27,hi8(37)
 680 02d8 E5E2      		ldi r30,lo8(37)
 681 02da F0E0      		ldi r31,hi8(37)
 682 02dc 8081      		ld r24,Z
 683 02de 8095      		com r24
 684 02e0 8C93      		st X,r24
 113:main.c        **** 	TCNT3L = 0;
 686               	.LM40:
 687 02e2 E4E9      		ldi r30,lo8(148)
 688 02e4 F0E0      		ldi r31,hi8(148)
 689 02e6 1082      		st Z,__zero_reg__
 114:main.c        **** 	TCNT3H = 0;
 691               	.LM41:
 692 02e8 E5E9      		ldi r30,lo8(149)
 693 02ea F0E0      		ldi r31,hi8(149)
 694 02ec 1082      		st Z,__zero_reg__
 695               	/* epilogue start */
 115:main.c        **** 
 116:main.c        **** }
 697               	.LM42:
 698 02ee CF91      		pop r28
 699 02f0 DF91      		pop r29
 700 02f2 FF91      		pop r31
 701 02f4 EF91      		pop r30
 702 02f6 BF91      		pop r27
 703 02f8 AF91      		pop r26
 704 02fa 8F91      		pop r24
 705 02fc 0F90      		pop r0
 706 02fe 0092 5B00 		sts 91,r0
 707 0302 0F90      		pop r0
 708 0304 0FBE      		out __SREG__,r0
 709 0306 0F90      		pop r0
 710 0308 1F90      		pop __zero_reg__
 711 030a 1895      		reti
 713               	.Lscope6:
 715               		.stabd	78,0,0
 717               	.global	getTimerCount2
 719               	getTimerCount2:
 720               		.stabd	46,0,0
 117:main.c        **** 
 118:main.c        **** unsigned int getTimerCount2(){
 722               	.LM43:
 723               	.LFBB7:
 724 030c DF93      		push r29
 725 030e CF93      		push r28
 726 0310 CDB7      		in r28,__SP_L__
 727 0312 DEB7      		in r29,__SP_H__
 728               	/* prologue: function */
 729               	/* frame size = 0 */
 119:main.c        **** 
 120:main.c        **** 	//volatile char timerLow = TCNT3L;
 121:main.c        **** 
 122:main.c        **** 	return TCNT0;
 731               	.LM44:
 732 0314 E6E4      		ldi r30,lo8(70)
 733 0316 F0E0      		ldi r31,hi8(70)
 734 0318 8081      		ld r24,Z
 735 031a 882F      		mov r24,r24
 736 031c 90E0      		ldi r25,lo8(0)
 737               	/* epilogue start */
 123:main.c        **** 
 124:main.c        **** }
 739               	.LM45:
 740 031e CF91      		pop r28
 741 0320 DF91      		pop r29
 742 0322 0895      		ret
 744               	.Lscope7:
 746               		.stabd	78,0,0
 749               	.global	vTaskFunction_1
 751               	vTaskFunction_1:
 752               		.stabd	46,0,0
 125:main.c        **** 
 126:main.c        **** void vTaskFunction_1(void *pvParameters)
 127:main.c        **** {	
 754               	.LM46:
 755               	.LFBB8:
 756 0324 DF93      		push r29
 757 0326 CF93      		push r28
 758 0328 0F92      		push __tmp_reg__
 759 032a 0F92      		push __tmp_reg__
 760 032c CDB7      		in r28,__SP_L__
 761 032e DEB7      		in r29,__SP_H__
 762               	/* prologue: function */
 763               	/* frame size = 2 */
 764 0330 9A83      		std Y+2,r25
 765 0332 8983      		std Y+1,r24
 128:main.c        ****     USART_Init(9600, 16000000);
 767               	.LM47:
 768 0334 80E8      		ldi r24,lo8(9600)
 769 0336 95E2      		ldi r25,hi8(9600)
 770 0338 40E0      		ldi r20,lo8(16000000)
 771 033a 54E2      		ldi r21,hi8(16000000)
 772 033c 64EF      		ldi r22,hlo8(16000000)
 773 033e 70E0      		ldi r23,hhi8(16000000)
 774 0340 0E94 0000 		call USART_Init
 775               	.L19:
 129:main.c        **** 	//static const char* str = "Hello World\n";
 130:main.c        **** 	for(;;){
 131:main.c        **** 		//PORTB = 0;
 132:main.c        **** 
 133:main.c        **** 		//USART_TransmitString("Hello World!\n");
 134:main.c        **** 		//USART_LogChar("I");
 135:main.c        **** 		//USART_TransmitString("H\n");
 136:main.c        **** 		vTaskDelay(25);
 777               	.LM48:
 778 0344 89E1      		ldi r24,lo8(25)
 779 0346 90E0      		ldi r25,hi8(25)
 780 0348 0E94 0000 		call vTaskDelay
 781 034c 00C0      		rjmp .L19
 783               	.Lscope8:
 785               		.stabd	78,0,0
 787               	.global	vIO_init
 789               	vIO_init:
 790               		.stabd	46,0,0
 137:main.c        **** 	}
 138:main.c        **** 	/*for(;;){
 139:main.c        **** 		printNum(getTimerCount2());
 140:main.c        **** 		USART_Write('\n');
 141:main.c        **** 	}*/
 142:main.c        **** 
 143:main.c        ****     for (;;)  {
 144:main.c        **** //        PORTB ^=  0xff;j
 145:main.c        **** 		//PCMSK2 = 1;
 146:main.c        **** 
 147:main.c        ****       printNum(getSonarData(0));
 148:main.c        **** 		USART_Write(' ');
 149:main.c        **** 		printNum(getSonarData(1));
 150:main.c        **** 		USART_Write('\n');
 151:main.c        ****       vTaskDelay(25);
 152:main.c        ****         /* Get and return received data from buffer */
 153:main.c        ****         // UDR0;
 154:main.c        ****     }
 155:main.c        **** }
 156:main.c        **** 
 157:main.c        **** void vIO_init(void)
 158:main.c        **** {
 792               	.LM49:
 793               	.LFBB9:
 794 034e DF93      		push r29
 795 0350 CF93      		push r28
 796 0352 CDB7      		in r28,__SP_L__
 797 0354 DEB7      		in r29,__SP_H__
 798               	/* prologue: function */
 799               	/* frame size = 0 */
 159:main.c        ****     //- set PortB as output
 160:main.c        **** 	DDRB = 0xFF; 
 801               	.LM50:
 802 0356 E4E2      		ldi r30,lo8(36)
 803 0358 F0E0      		ldi r31,hi8(36)
 804 035a 8FEF      		ldi r24,lo8(-1)
 805 035c 8083      		st Z,r24
 161:main.c        ****     PORTB = 0; 
 807               	.LM51:
 808 035e E5E2      		ldi r30,lo8(37)
 809 0360 F0E0      		ldi r31,hi8(37)
 810 0362 1082      		st Z,__zero_reg__
 811               	/* epilogue start */
 162:main.c        **** }
 813               	.LM52:
 814 0364 CF91      		pop r28
 815 0366 DF91      		pop r29
 816 0368 0895      		ret
 818               	.Lscope9:
 820               		.stabd	78,0,0
 821               		.comm sonarTime,2,1
 825               	.Letext0:
 826               	.global __do_copy_data
 827               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccPtLNfM.s:2      *ABS*:0000003f __SREG__
     /tmp/ccPtLNfM.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccPtLNfM.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccPtLNfM.s:5      *ABS*:00000034 __CCP__
     /tmp/ccPtLNfM.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccPtLNfM.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccPtLNfM.s:130    .bss:00000000 count
     /tmp/ccPtLNfM.s:136    .text:00000000 vApplicationTickHook
     /tmp/ccPtLNfM.s:167    .text:00000020 vApplicationStackOverflowHook
     /tmp/ccPtLNfM.s:201    .text:0000002e main
     /tmp/ccPtLNfM.s:789    .text:0000034e vIO_init
     /tmp/ccPtLNfM.s:751    .text:00000324 vTaskFunction_1
     /tmp/ccPtLNfM.s:394    .data:0000000c C.2.2032
     /tmp/ccPtLNfM.s:416    .text:00000150 printHex
     /tmp/ccPtLNfM.s:562    .text:0000023c printNum
     /tmp/ccPtLNfM.s:653    .text:000002b2 __vector_50
     /tmp/ccPtLNfM.s:719    .text:0000030c getTimerCount2
                            *COM*:00000002 sonarTime

UNDEFINED SYMBOLS
xTaskGenericCreate
vTaskSonar
vTaskUSARTWrite
vTaskUSARTRead
vTaskStartScheduler
USART_Write
memset
itoa
USART_Init
vTaskDelay
__do_copy_data
__do_clear_bss
