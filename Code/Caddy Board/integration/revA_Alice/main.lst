   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 159               	.global	count
 160               		.section .bss
 163               	count:
 164 0000 0000      		.zero	2
 165               		.comm	sonarTime,2,1
 166               		.text
 168               	.global	vApplicationTickHook
 170               	vApplicationTickHook:
 171               		.stabd	46,0,0
   1:main.c        **** /*
   2:main.c        ****  FreeRTOS V6.1.0
   3:main.c        ****  
   4:main.c        ****  This is a basic RTOS program. It turns on the LEDs.
   5:main.c        ****  Nothing too exciting.
   6:main.c        ****  
   7:main.c        ****  */
   8:main.c        **** 
   9:main.c        **** #include <stdint.h>
  10:main.c        **** #include <avr/io.h>
  11:main.c        **** #include <string.h>
  12:main.c        **** #include <stdlib.h>
  13:main.c        **** #include <stdio.h>
  14:main.c        **** #include <math.h>
  15:main.c        **** #include "FreeRTOS.h"
  16:main.c        **** #include <avr/io.h>
  17:main.c        **** #include <avr/interrupt.h>
  18:main.c        **** #include "task.h"
  19:main.c        **** #include "usart.h"
  20:main.c        **** #include "Components/Sonar/Sonar.h"
  21:main.c        **** #include "queue.h"
  22:main.c        **** #include "spi.h"
  23:main.c        **** #include "Components/Speed/Speed.h"
  24:main.c        **** 
  25:main.c        **** void vTaskFunction_1(void *pvParameters);
  26:main.c        **** void vTaskFunction_2(void *pvParameters);
  27:main.c        **** void vTaskFunction_3(void *pvParameters);
  28:main.c        **** void vTaskPot(void *pvParameters);
  29:main.c        **** void vIO_init(void);
  30:main.c        **** void vApplicationTickHook();
  31:main.c        **** void printNum(unsigned char i);
  32:main.c        **** void printHex(int i);
  33:main.c        **** 
  34:main.c        **** int count = 0;
  35:main.c        **** 
  36:main.c        **** int sonarTime;
  37:main.c        **** 
  38:main.c        **** void vApplicationTickHook()
  39:main.c        **** {
 173               	.LM0:
 174               	.LFBB1:
 175 0000 CF93      		push r28
 176 0002 DF93      		push r29
 177 0004 CDB7      		in r28,__SP_L__
 178 0006 DEB7      		in r29,__SP_H__
 179               	/* prologue: function */
 180               	/* frame size = 0 */
 181               	/* stack size = 2 */
 182               	.L__stack_usage = 2
  40:main.c        ****     count++;
 184               	.LM1:
 185 0008 8091 0000 		lds r24,count
 186 000c 9091 0000 		lds r25,count+1
 187 0010 0196      		adiw r24,1
 188 0012 9093 0000 		sts count+1,r25
 189 0016 8093 0000 		sts count,r24
 190               	/* epilogue start */
  41:main.c        **** }
 192               	.LM2:
 193 001a DF91      		pop r29
 194 001c CF91      		pop r28
 195 001e 0895      		ret
 197               	.Lscope1:
 199               		.stabd	78,0,0
 201               	.global	vApplicationStackOverflowHook
 203               	vApplicationStackOverflowHook:
 204               		.stabd	46,0,0
  42:main.c        **** 
  43:main.c        **** void vApplicationStackOverflowHook(){
 206               	.LM3:
 207               	.LFBB2:
 208 0020 CF93      		push r28
 209 0022 DF93      		push r29
 210 0024 CDB7      		in r28,__SP_L__
 211 0026 DEB7      		in r29,__SP_H__
 212               	/* prologue: function */
 213               	/* frame size = 0 */
 214               	/* stack size = 2 */
 215               	.L__stack_usage = 2
  44:main.c        **** 	return;
 217               	.LM4:
 218 0028 0000      		nop
 219               	/* epilogue start */
  45:main.c        **** }
 221               	.LM5:
 222 002a DF91      		pop r29
 223 002c CF91      		pop r28
 224 002e 0895      		ret
 226               	.Lscope2:
 228               		.stabd	78,0,0
 229               		.section	.rodata
 230               	.LC1:
 231 0000 5430 00   		.string	"T0"
 232               	.LC2:
 233 0003 5431 00   		.string	"T1"
 234               	.LC3:
 235 0006 5432 00   		.string	"T2"
 236               	.LC4:
 237 0009 5433 00   		.string	"T3"
 238               		.text
 240               	.global	main
 242               	main:
 243               		.stabd	46,0,0
  46:main.c        **** /*-----------------------------------------------------------*/
  47:main.c        **** 
  48:main.c        **** int main( void )
  49:main.c        **** {
 245               	.LM6:
 246               	.LFBB3:
 247 0030 AF92      		push r10
 248 0032 BF92      		push r11
 249 0034 CF92      		push r12
 250 0036 DF92      		push r13
 251 0038 EF92      		push r14
 252 003a FF92      		push r15
 253 003c 0F93      		push r16
 254 003e CF93      		push r28
 255 0040 DF93      		push r29
 256 0042 00D0      		rcall .
 257 0044 00D0      		rcall .
 258 0046 CDB7      		in r28,__SP_L__
 259 0048 DEB7      		in r29,__SP_H__
 260               	/* prologue: function */
 261               	/* frame size = 6 */
 262               	/* stack size = 15 */
 263               	.L__stack_usage = 15
  50:main.c        ****     
  51:main.c        ****     //- wimpy variable defs
  52:main.c        **** 	uint8_t val[2] = {0x3F, 0xFE};
 265               	.LM7:
 266 004a 8FE3      		ldi r24,lo8(63)
 267 004c 8D83      		std Y+5,r24
 268 004e 8EEF      		ldi r24,lo8(-2)
 269 0050 8E83      		std Y+6,r24
  53:main.c        ****     uint8_t *val0, *val1;
  54:main.c        ****     
  55:main.c        **** 	//- avoid pesky warnings...
  56:main.c        **** 	val0 = val + 0;
 271               	.LM8:
 272 0052 CE01      		movw r24,r28
 273 0054 0596      		adiw r24,5
 274 0056 9A83      		std Y+2,r25
 275 0058 8983      		std Y+1,r24
  57:main.c        **** 	val1 = val + 1;
 277               	.LM9:
 278 005a CE01      		movw r24,r28
 279 005c 0596      		adiw r24,5
 280 005e 0196      		adiw r24,1
 281 0060 9C83      		std Y+4,r25
 282 0062 8B83      		std Y+3,r24
  58:main.c        ****     
  59:main.c        **** 	DDRD = 0xFF;
 284               	.LM10:
 285 0064 8AE2      		ldi r24,lo8(42)
 286 0066 90E0      		ldi r25,0
 287 0068 2FEF      		ldi r18,lo8(-1)
 288 006a FC01      		movw r30,r24
 289 006c 2083      		st Z,r18
  60:main.c        **** 	DDRE = 0xFF;
 291               	.LM11:
 292 006e 8DE2      		ldi r24,lo8(45)
 293 0070 90E0      		ldi r25,0
 294 0072 2FEF      		ldi r18,lo8(-1)
 295 0074 FC01      		movw r30,r24
 296 0076 2083      		st Z,r18
  61:main.c        **** 	DDRB = 0xFF; 
 298               	.LM12:
 299 0078 84E2      		ldi r24,lo8(36)
 300 007a 90E0      		ldi r25,0
 301 007c 2FEF      		ldi r18,lo8(-1)
 302 007e FC01      		movw r30,r24
 303 0080 2083      		st Z,r18
  62:main.c        **** 	DDRK = 0;
 305               	.LM13:
 306 0082 87E0      		ldi r24,lo8(7)
 307 0084 91E0      		ldi r25,lo8(1)
 308 0086 FC01      		movw r30,r24
 309 0088 1082      		st Z,__zero_reg__
  63:main.c        **** 
  64:main.c        **** 	PORTD = 0;
 311               	.LM14:
 312 008a 8BE2      		ldi r24,lo8(43)
 313 008c 90E0      		ldi r25,0
 314 008e FC01      		movw r30,r24
 315 0090 1082      		st Z,__zero_reg__
  65:main.c        **** 	PORTE = 0;
 317               	.LM15:
 318 0092 8EE2      		ldi r24,lo8(46)
 319 0094 90E0      		ldi r25,0
 320 0096 FC01      		movw r30,r24
 321 0098 1082      		st Z,__zero_reg__
  66:main.c        **** 	PORTK = 2;
 323               	.LM16:
 324 009a 88E0      		ldi r24,lo8(8)
 325 009c 91E0      		ldi r25,lo8(1)
 326 009e 22E0      		ldi r18,lo8(2)
 327 00a0 FC01      		movw r30,r24
 328 00a2 2083      		st Z,r18
  67:main.c        **** 
  68:main.c        ****     //- init IO with goodness
  69:main.c        **** 	vIO_init();
 330               	.LM17:
 331 00a4 0E94 0000 		call vIO_init
  70:main.c        **** 
  71:main.c        **** 	//- Create a 
  72:main.c        **** 	xTaskCreate( (pdTASK_CODE) vTaskFunction_1, (signed char *) "T0", configMINIMAL_STACK_SIZE+1000,
 333               	.LM18:
 334 00a8 8B81      		ldd r24,Y+3
 335 00aa 9C81      		ldd r25,Y+4
 336 00ac A12C      		mov r10,__zero_reg__
 337 00ae B12C      		mov r11,__zero_reg__
 338 00b0 C12C      		mov r12,__zero_reg__
 339 00b2 D12C      		mov r13,__zero_reg__
 340 00b4 E12C      		mov r14,__zero_reg__
 341 00b6 F12C      		mov r15,__zero_reg__
 342 00b8 01E0      		ldi r16,lo8(1)
 343 00ba 9C01      		movw r18,r24
 344 00bc 4DE3      		ldi r20,lo8(61)
 345 00be 54E0      		ldi r21,lo8(4)
 346 00c0 60E0      		ldi r22,lo8(.LC1)
 347 00c2 70E0      		ldi r23,hi8(.LC1)
 348 00c4 80E0      		ldi r24,lo8(gs(vTaskFunction_1))
 349 00c6 90E0      		ldi r25,hi8(gs(vTaskFunction_1))
 350 00c8 0E94 0000 		call xTaskGenericCreate
  73:main.c        ****                 (void *) val1, 1, NULL );
  74:main.c        ****    /*xTaskCreate( (pdTASK_CODE) vTaskFunction_2, (signed char *) "T0", configMINIMAL_STACK_SIZE+100
  75:main.c        ****                 (void *) val1, 1, NULL );
  76:main.c        ****    xTaskCreate( (pdTASK_CODE) vTaskFunction_3, (signed char *) "T0", configMINIMAL_STACK_SIZE+1000,
  77:main.c        ****                 (void *) val1, 1, NULL );
  78:main.c        **** 	xTaskCreate( (pdTASK_CODE) vTaskPot, (signed char *) "T0", configMINIMAL_STACK_SIZE+1000,
  79:main.c        ****                 (void *) val1, 1, NULL );*/
  80:main.c        **** 
  81:main.c        ****  
  82:main.c        ****    xTaskCreate( (pdTASK_CODE) vTaskSonar, (signed char *) "T1", configMINIMAL_STACK_SIZE+1000,
 352               	.LM19:
 353 00cc 8B81      		ldd r24,Y+3
 354 00ce 9C81      		ldd r25,Y+4
 355 00d0 A12C      		mov r10,__zero_reg__
 356 00d2 B12C      		mov r11,__zero_reg__
 357 00d4 C12C      		mov r12,__zero_reg__
 358 00d6 D12C      		mov r13,__zero_reg__
 359 00d8 E12C      		mov r14,__zero_reg__
 360 00da F12C      		mov r15,__zero_reg__
 361 00dc 01E0      		ldi r16,lo8(1)
 362 00de 9C01      		movw r18,r24
 363 00e0 4DE3      		ldi r20,lo8(61)
 364 00e2 54E0      		ldi r21,lo8(4)
 365 00e4 60E0      		ldi r22,lo8(.LC2)
 366 00e6 70E0      		ldi r23,hi8(.LC2)
 367 00e8 80E0      		ldi r24,lo8(gs(vTaskSonar))
 368 00ea 90E0      		ldi r25,hi8(gs(vTaskSonar))
 369 00ec 0E94 0000 		call xTaskGenericCreate
  83:main.c        ****                 (void *) val1, 1, NULL );
  84:main.c        **** 
  85:main.c        ****    xTaskCreate( (pdTASK_CODE) vTaskUSARTWrite, (signed char *) "T2", configMINIMAL_STACK_SIZE+1000,
 371               	.LM20:
 372 00f0 8B81      		ldd r24,Y+3
 373 00f2 9C81      		ldd r25,Y+4
 374 00f4 A12C      		mov r10,__zero_reg__
 375 00f6 B12C      		mov r11,__zero_reg__
 376 00f8 C12C      		mov r12,__zero_reg__
 377 00fa D12C      		mov r13,__zero_reg__
 378 00fc E12C      		mov r14,__zero_reg__
 379 00fe F12C      		mov r15,__zero_reg__
 380 0100 01E0      		ldi r16,lo8(1)
 381 0102 9C01      		movw r18,r24
 382 0104 4DE3      		ldi r20,lo8(61)
 383 0106 54E0      		ldi r21,lo8(4)
 384 0108 60E0      		ldi r22,lo8(.LC3)
 385 010a 70E0      		ldi r23,hi8(.LC3)
 386 010c 80E0      		ldi r24,lo8(gs(vTaskUSARTWrite))
 387 010e 90E0      		ldi r25,hi8(gs(vTaskUSARTWrite))
 388 0110 0E94 0000 		call xTaskGenericCreate
  86:main.c        ****    				(void *) val1, 1, NULL);
  87:main.c        **** 
  88:main.c        ****    xTaskCreate( (pdTASK_CODE) vTaskUSARTRead, (signed char *) "T3", configMINIMAL_STACK_SIZE+1000,
 390               	.LM21:
 391 0114 8B81      		ldd r24,Y+3
 392 0116 9C81      		ldd r25,Y+4
 393 0118 A12C      		mov r10,__zero_reg__
 394 011a B12C      		mov r11,__zero_reg__
 395 011c C12C      		mov r12,__zero_reg__
 396 011e D12C      		mov r13,__zero_reg__
 397 0120 E12C      		mov r14,__zero_reg__
 398 0122 F12C      		mov r15,__zero_reg__
 399 0124 01E0      		ldi r16,lo8(1)
 400 0126 9C01      		movw r18,r24
 401 0128 4DE3      		ldi r20,lo8(61)
 402 012a 54E0      		ldi r21,lo8(4)
 403 012c 60E0      		ldi r22,lo8(.LC4)
 404 012e 70E0      		ldi r23,hi8(.LC4)
 405 0130 80E0      		ldi r24,lo8(gs(vTaskUSARTRead))
 406 0132 90E0      		ldi r25,hi8(gs(vTaskUSARTRead))
 407 0134 0E94 0000 		call xTaskGenericCreate
  89:main.c        ****    				(void *) val1, 1, NULL);
  90:main.c        **** 
  91:main.c        **** //   xTaskCreate( (pdTASK_CODE) vTaskUSARTLog, (signed char *) "T4", configMINIMAL_STACK_SIZE+1000,
  92:main.c        **** //   				(void *) val1, 1, NULL);
  93:main.c        ****     
  94:main.c        ****     //- kick off the scheduler
  95:main.c        **** 	vTaskStartScheduler();
 409               	.LM22:
 410 0138 0E94 0000 		call vTaskStartScheduler
  96:main.c        ****     
  97:main.c        **** 	return 0;
 412               	.LM23:
 413 013c 80E0      		ldi r24,0
 414 013e 90E0      		ldi r25,0
 415               	/* epilogue start */
  98:main.c        **** }
 417               	.LM24:
 418 0140 2696      		adiw r28,6
 419 0142 0FB6      		in __tmp_reg__,__SREG__
 420 0144 F894      		cli
 421 0146 DEBF      		out __SP_H__,r29
 422 0148 0FBE      		out __SREG__,__tmp_reg__
 423 014a CDBF      		out __SP_L__,r28
 424 014c DF91      		pop r29
 425 014e CF91      		pop r28
 426 0150 0F91      		pop r16
 427 0152 FF90      		pop r15
 428 0154 EF90      		pop r14
 429 0156 DF90      		pop r13
 430 0158 CF90      		pop r12
 431 015a BF90      		pop r11
 432 015c AF90      		pop r10
 433 015e 0895      		ret
 440               	.Lscope3:
 442               		.stabd	78,0,0
 443               		.section	.rodata
 444               	.LC0:
 445 000c 30        		.byte	48
 446 000d 31        		.byte	49
 447 000e 32        		.byte	50
 448 000f 33        		.byte	51
 449 0010 34        		.byte	52
 450 0011 35        		.byte	53
 451 0012 36        		.byte	54
 452 0013 37        		.byte	55
 453 0014 38        		.byte	56
 454 0015 39        		.byte	57
 455 0016 41        		.byte	65
 456 0017 42        		.byte	66
 457 0018 43        		.byte	67
 458 0019 44        		.byte	68
 459 001a 45        		.byte	69
 460 001b 46        		.byte	70
 461               		.text
 464               	.global	printHex
 466               	printHex:
 467               		.stabd	46,0,0
  99:main.c        **** /*-----------------------------------------------------------*/
 100:main.c        **** 
 101:main.c        **** void printHex(int i){
 469               	.LM25:
 470               	.LFBB4:
 471 0160 CF93      		push r28
 472 0162 DF93      		push r29
 473 0164 CDB7      		in r28,__SP_L__
 474 0166 DEB7      		in r29,__SP_H__
 475 0168 6297      		sbiw r28,18
 476 016a 0FB6      		in __tmp_reg__,__SREG__
 477 016c F894      		cli
 478 016e DEBF      		out __SP_H__,r29
 479 0170 0FBE      		out __SREG__,__tmp_reg__
 480 0172 CDBF      		out __SP_L__,r28
 481               	/* prologue: function */
 482               	/* frame size = 18 */
 483               	/* stack size = 20 */
 484               	.L__stack_usage = 20
 485 0174 9A8B      		std Y+18,r25
 486 0176 898B      		std Y+17,r24
 102:main.c        **** 	char hex[] = {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'};
 488               	.LM26:
 489 0178 20E1      		ldi r18,lo8(16)
 490 017a E0E0      		ldi r30,lo8(.LC0)
 491 017c F0E0      		ldi r31,hi8(.LC0)
 492 017e CE01      		movw r24,r28
 493 0180 0196      		adiw r24,1
 494 0182 DC01      		movw r26,r24
 495               		0:
 496 0184 0190      		ld r0,Z+
 497 0186 0D92      		st X+,r0
 498 0188 2A95      		dec r18
 499 018a 01F4      		brne 0b
 103:main.c        **** 
 104:main.c        **** 	USART_Write(hex[(i&0xF000) >> 12]);
 501               	.LM27:
 502 018c 8989      		ldd r24,Y+17
 503 018e 9A89      		ldd r25,Y+18
 504 0190 892F      		mov r24,r25
 505 0192 9927      		clr r25
 506 0194 8295      		swap r24
 507 0196 8F70      		andi r24,0x0f
 508 0198 9E01      		movw r18,r28
 509 019a 2F5F      		subi r18,-1
 510 019c 3F4F      		sbci r19,-1
 511 019e 820F      		add r24,r18
 512 01a0 931F      		adc r25,r19
 513 01a2 FC01      		movw r30,r24
 514 01a4 8081      		ld r24,Z
 515 01a6 0E94 0000 		call USART_Write
 105:main.c        **** 	USART_Write(hex[(i&0xF00) >> 8]);
 517               	.LM28:
 518 01aa 8989      		ldd r24,Y+17
 519 01ac 9A89      		ldd r25,Y+18
 520 01ae 8827      		clr r24
 521 01b0 9F70      		andi r25,15
 522 01b2 892F      		mov r24,r25
 523 01b4 990F      		lsl r25
 524 01b6 990B      		sbc r25,r25
 525 01b8 9E01      		movw r18,r28
 526 01ba 2F5F      		subi r18,-1
 527 01bc 3F4F      		sbci r19,-1
 528 01be 820F      		add r24,r18
 529 01c0 931F      		adc r25,r19
 530 01c2 FC01      		movw r30,r24
 531 01c4 8081      		ld r24,Z
 532 01c6 0E94 0000 		call USART_Write
 106:main.c        **** 	USART_Write(hex[(i&0xF0) >> 4]);
 534               	.LM29:
 535 01ca 8989      		ldd r24,Y+17
 536 01cc 9A89      		ldd r25,Y+18
 537 01ce 807F      		andi r24,240
 538 01d0 9927      		clr r25
 539 01d2 9595      		asr r25
 540 01d4 8795      		ror r24
 541 01d6 9595      		asr r25
 542 01d8 8795      		ror r24
 543 01da 9595      		asr r25
 544 01dc 8795      		ror r24
 545 01de 9595      		asr r25
 546 01e0 8795      		ror r24
 547 01e2 9E01      		movw r18,r28
 548 01e4 2F5F      		subi r18,-1
 549 01e6 3F4F      		sbci r19,-1
 550 01e8 820F      		add r24,r18
 551 01ea 931F      		adc r25,r19
 552 01ec FC01      		movw r30,r24
 553 01ee 8081      		ld r24,Z
 554 01f0 0E94 0000 		call USART_Write
 107:main.c        **** 	USART_Write(hex[i&0xF]);
 556               	.LM30:
 557 01f4 8989      		ldd r24,Y+17
 558 01f6 9A89      		ldd r25,Y+18
 559 01f8 8F70      		andi r24,15
 560 01fa 9927      		clr r25
 561 01fc 9E01      		movw r18,r28
 562 01fe 2F5F      		subi r18,-1
 563 0200 3F4F      		sbci r19,-1
 564 0202 820F      		add r24,r18
 565 0204 931F      		adc r25,r19
 566 0206 FC01      		movw r30,r24
 567 0208 8081      		ld r24,Z
 568 020a 0E94 0000 		call USART_Write
 569               	/* epilogue start */
 108:main.c        **** 
 109:main.c        **** }
 571               	.LM31:
 572 020e 6296      		adiw r28,18
 573 0210 0FB6      		in __tmp_reg__,__SREG__
 574 0212 F894      		cli
 575 0214 DEBF      		out __SP_H__,r29
 576 0216 0FBE      		out __SREG__,__tmp_reg__
 577 0218 CDBF      		out __SP_L__,r28
 578 021a DF91      		pop r29
 579 021c CF91      		pop r28
 580 021e 0895      		ret
 585               	.Lscope4:
 587               		.stabd	78,0,0
 590               	.global	printNum
 592               	printNum:
 593               		.stabd	46,0,0
 110:main.c        **** 
 111:main.c        **** void printNum(unsigned char i){
 595               	.LM32:
 596               	.LFBB5:
 597 0220 CF93      		push r28
 598 0222 DF93      		push r29
 599 0224 CDB7      		in r28,__SP_L__
 600 0226 DEB7      		in r29,__SP_H__
 601 0228 2D97      		sbiw r28,13
 602 022a 0FB6      		in __tmp_reg__,__SREG__
 603 022c F894      		cli
 604 022e DEBF      		out __SP_H__,r29
 605 0230 0FBE      		out __SREG__,__tmp_reg__
 606 0232 CDBF      		out __SP_L__,r28
 607               	/* prologue: function */
 608               	/* frame size = 13 */
 609               	/* stack size = 15 */
 610               	.L__stack_usage = 15
 611 0234 8D87      		std Y+13,r24
 112:main.c        ****     
 113:main.c        ****     char str[10];
 114:main.c        ****     memset(str,0,10);
 613               	.LM33:
 614 0236 CE01      		movw r24,r28
 615 0238 0396      		adiw r24,3
 616 023a 4AE0      		ldi r20,lo8(10)
 617 023c 50E0      		ldi r21,0
 618 023e 60E0      		ldi r22,0
 619 0240 70E0      		ldi r23,0
 620 0242 0E94 0000 		call memset
 115:main.c        ****     itoa(i,str,10);
 622               	.LM34:
 623 0246 8D85      		ldd r24,Y+13
 624 0248 882F      		mov r24,r24
 625 024a 90E0      		ldi r25,0
 626 024c 9E01      		movw r18,r28
 627 024e 2D5F      		subi r18,-3
 628 0250 3F4F      		sbci r19,-1
 629 0252 4AE0      		ldi r20,lo8(10)
 630 0254 50E0      		ldi r21,0
 631 0256 B901      		movw r22,r18
 632 0258 0E94 0000 		call itoa
 116:main.c        ****     char * irr = str;
 634               	.LM35:
 635 025c CE01      		movw r24,r28
 636 025e 0396      		adiw r24,3
 637 0260 9A83      		std Y+2,r25
 638 0262 8983      		std Y+1,r24
 117:main.c        ****     while(*irr){
 640               	.LM36:
 641 0264 00C0      		rjmp .L8
 642               	.L9:
 118:main.c        ****         USART_AddToQueue((unsigned char )*irr);
 644               	.LM37:
 645 0266 8981      		ldd r24,Y+1
 646 0268 9A81      		ldd r25,Y+2
 647 026a FC01      		movw r30,r24
 648 026c 8081      		ld r24,Z
 649 026e 0E94 0000 		call USART_AddToQueue
 119:main.c        ****         irr++;
 651               	.LM38:
 652 0272 8981      		ldd r24,Y+1
 653 0274 9A81      		ldd r25,Y+2
 654 0276 0196      		adiw r24,1
 655 0278 9A83      		std Y+2,r25
 656 027a 8983      		std Y+1,r24
 657               	.L8:
 117:main.c        ****     while(*irr){
 659               	.LM39:
 660 027c 8981      		ldd r24,Y+1
 661 027e 9A81      		ldd r25,Y+2
 662 0280 FC01      		movw r30,r24
 663 0282 8081      		ld r24,Z
 664 0284 8823      		tst r24
 665 0286 01F4      		brne .L9
 666               	/* epilogue start */
 120:main.c        ****     }
 121:main.c        ****     
 122:main.c        **** }
 668               	.LM40:
 669 0288 2D96      		adiw r28,13
 670 028a 0FB6      		in __tmp_reg__,__SREG__
 671 028c F894      		cli
 672 028e DEBF      		out __SP_H__,r29
 673 0290 0FBE      		out __SREG__,__tmp_reg__
 674 0292 CDBF      		out __SP_L__,r28
 675 0294 DF91      		pop r29
 676 0296 CF91      		pop r28
 677 0298 0895      		ret
 683               	.Lscope5:
 685               		.stabd	78,0,0
 687               	.global	__vector_50
 689               	__vector_50:
 690               		.stabd	46,0,0
 123:main.c        **** 
 124:main.c        **** ISR(TIMER5_OVF_vect){
 692               	.LM41:
 693               	.LFBB6:
 694 029a 1F92      		push r1
 695 029c 0F92      		push r0
 696 029e 0090 5F00 		lds r0,95
 697 02a2 0F92      		push r0
 698 02a4 1124      		clr __zero_reg__
 699 02a6 0090 5B00 		lds r0,91
 700 02aa 0F92      		push r0
 701 02ac 2F93      		push r18
 702 02ae 3F93      		push r19
 703 02b0 8F93      		push r24
 704 02b2 9F93      		push r25
 705 02b4 EF93      		push r30
 706 02b6 FF93      		push r31
 707 02b8 CF93      		push r28
 708 02ba DF93      		push r29
 709 02bc CDB7      		in r28,__SP_L__
 710 02be DEB7      		in r29,__SP_H__
 711               	/* prologue: Signal */
 712               	/* frame size = 0 */
 713               	/* stack size = 12 */
 714               	.L__stack_usage = 12
 125:main.c        **** 
 126:main.c        **** 	PORTB ^= 0xFF;
 716               	.LM42:
 717 02c0 85E2      		ldi r24,lo8(37)
 718 02c2 90E0      		ldi r25,0
 719 02c4 25E2      		ldi r18,lo8(37)
 720 02c6 30E0      		ldi r19,0
 721 02c8 F901      		movw r30,r18
 722 02ca 2081      		ld r18,Z
 723 02cc 2095      		com r18
 724 02ce FC01      		movw r30,r24
 725 02d0 2083      		st Z,r18
 127:main.c        **** 	TCNT3L = 0;
 727               	.LM43:
 728 02d2 84E9      		ldi r24,lo8(-108)
 729 02d4 90E0      		ldi r25,0
 730 02d6 FC01      		movw r30,r24
 731 02d8 1082      		st Z,__zero_reg__
 128:main.c        **** 	TCNT3H = 0;
 733               	.LM44:
 734 02da 85E9      		ldi r24,lo8(-107)
 735 02dc 90E0      		ldi r25,0
 736 02de FC01      		movw r30,r24
 737 02e0 1082      		st Z,__zero_reg__
 738               	/* epilogue start */
 129:main.c        **** 
 130:main.c        **** }
 740               	.LM45:
 741 02e2 DF91      		pop r29
 742 02e4 CF91      		pop r28
 743 02e6 FF91      		pop r31
 744 02e8 EF91      		pop r30
 745 02ea 9F91      		pop r25
 746 02ec 8F91      		pop r24
 747 02ee 3F91      		pop r19
 748 02f0 2F91      		pop r18
 749 02f2 0F90      		pop r0
 750 02f4 0092 5B00 		sts 91,r0
 751 02f8 0F90      		pop r0
 752 02fa 0092 5F00 		sts 95,r0
 753 02fe 0F90      		pop r0
 754 0300 1F90      		pop r1
 755 0302 1895      		reti
 757               	.Lscope6:
 759               		.stabd	78,0,0
 761               	.global	getTimerCount2
 763               	getTimerCount2:
 764               		.stabd	46,0,0
 131:main.c        **** 
 132:main.c        **** unsigned int getTimerCount2(){
 766               	.LM46:
 767               	.LFBB7:
 768 0304 CF93      		push r28
 769 0306 DF93      		push r29
 770 0308 CDB7      		in r28,__SP_L__
 771 030a DEB7      		in r29,__SP_H__
 772               	/* prologue: function */
 773               	/* frame size = 0 */
 774               	/* stack size = 2 */
 775               	.L__stack_usage = 2
 133:main.c        **** 
 134:main.c        **** 	//volatile char timerLow = TCNT3L;
 135:main.c        **** 
 136:main.c        **** 	return TCNT0;
 777               	.LM47:
 778 030c 86E4      		ldi r24,lo8(70)
 779 030e 90E0      		ldi r25,0
 780 0310 FC01      		movw r30,r24
 781 0312 8081      		ld r24,Z
 782 0314 882F      		mov r24,r24
 783 0316 90E0      		ldi r25,0
 784               	/* epilogue start */
 137:main.c        **** 
 138:main.c        **** }
 786               	.LM48:
 787 0318 DF91      		pop r29
 788 031a CF91      		pop r28
 789 031c 0895      		ret
 791               	.Lscope7:
 793               		.stabd	78,0,0
 796               	.global	vTaskFunction_1
 798               	vTaskFunction_1:
 799               		.stabd	46,0,0
 139:main.c        **** 
 140:main.c        **** void vTaskFunction_1(void *pvParameters)
 141:main.c        **** {	
 801               	.LM49:
 802               	.LFBB8:
 803 031e CF93      		push r28
 804 0320 DF93      		push r29
 805 0322 1F92      		push __zero_reg__
 806 0324 1F92      		push __zero_reg__
 807 0326 CDB7      		in r28,__SP_L__
 808 0328 DEB7      		in r29,__SP_H__
 809               	/* prologue: function */
 810               	/* frame size = 2 */
 811               	/* stack size = 4 */
 812               	.L__stack_usage = 4
 813 032a 9A83      		std Y+2,r25
 814 032c 8983      		std Y+1,r24
 142:main.c        ****    USART_Init(9600, 16000000);
 816               	.LM50:
 817 032e 40E0      		ldi r20,0
 818 0330 54E2      		ldi r21,lo8(36)
 819 0332 64EF      		ldi r22,lo8(-12)
 820 0334 70E0      		ldi r23,0
 821 0336 80E8      		ldi r24,lo8(-128)
 822 0338 95E2      		ldi r25,lo8(37)
 823 033a 0E94 0000 		call USART_Init
 824               	.L14:
 143:main.c        **** 	for(;;);
 826               	.LM51:
 827 033e 00C0      		rjmp .L14
 829               	.Lscope8:
 831               		.stabd	78,0,0
 834               	.global	vTaskFunction_2
 836               	vTaskFunction_2:
 837               		.stabd	46,0,0
 144:main.c        **** 	for(;;){
 145:main.c        **** 		PORTL = 0x10;
 146:main.c        **** 		vTaskDelay(200);
 147:main.c        **** 		PORTL = 0x20;
 148:main.c        **** 		vTaskDelay(200);
 149:main.c        **** 		PORTL = 0x40;
 150:main.c        **** 		vTaskDelay(200);
 151:main.c        **** 		PORTL = 0x80;
 152:main.c        **** 		vTaskDelay(200);
 153:main.c        **** 	}
 154:main.c        **** }
 155:main.c        **** 
 156:main.c        **** void vTaskFunction_2(void *pvParameters){
 839               	.LM52:
 840               	.LFBB9:
 841 0340 CF93      		push r28
 842 0342 DF93      		push r29
 843 0344 1F92      		push __zero_reg__
 844 0346 1F92      		push __zero_reg__
 845 0348 CDB7      		in r28,__SP_L__
 846 034a DEB7      		in r29,__SP_H__
 847               	/* prologue: function */
 848               	/* frame size = 2 */
 849               	/* stack size = 4 */
 850               	.L__stack_usage = 4
 851 034c 9A83      		std Y+2,r25
 852 034e 8983      		std Y+1,r24
 157:main.c        **** 	DDRA = ~(1 << 3);
 854               	.LM53:
 855 0350 81E2      		ldi r24,lo8(33)
 856 0352 90E0      		ldi r25,0
 857 0354 27EF      		ldi r18,lo8(-9)
 858 0356 FC01      		movw r30,r24
 859 0358 2083      		st Z,r18
 158:main.c        **** 	PORTA |= 3;
 861               	.LM54:
 862 035a 82E2      		ldi r24,lo8(34)
 863 035c 90E0      		ldi r25,0
 864 035e 22E2      		ldi r18,lo8(34)
 865 0360 30E0      		ldi r19,0
 866 0362 F901      		movw r30,r18
 867 0364 2081      		ld r18,Z
 868 0366 2360      		ori r18,lo8(3)
 869 0368 FC01      		movw r30,r24
 870 036a 2083      		st Z,r18
 871               	.L16:
 159:main.c        **** 	for(;;){
 160:main.c        **** 		PORTA &= ~3;
 873               	.LM55:
 874 036c 82E2      		ldi r24,lo8(34)
 875 036e 90E0      		ldi r25,0
 876 0370 22E2      		ldi r18,lo8(34)
 877 0372 30E0      		ldi r19,0
 878 0374 F901      		movw r30,r18
 879 0376 2081      		ld r18,Z
 880 0378 2C7F      		andi r18,lo8(-4)
 881 037a FC01      		movw r30,r24
 882 037c 2083      		st Z,r18
 161:main.c        **** 		vTaskDelay(200); 
 884               	.LM56:
 885 037e 88EC      		ldi r24,lo8(-56)
 886 0380 90E0      		ldi r25,0
 887 0382 0E94 0000 		call vTaskDelay
 162:main.c        **** 		PORTA &= ~3;
 889               	.LM57:
 890 0386 82E2      		ldi r24,lo8(34)
 891 0388 90E0      		ldi r25,0
 892 038a 22E2      		ldi r18,lo8(34)
 893 038c 30E0      		ldi r19,0
 894 038e F901      		movw r30,r18
 895 0390 2081      		ld r18,Z
 896 0392 2C7F      		andi r18,lo8(-4)
 897 0394 FC01      		movw r30,r24
 898 0396 2083      		st Z,r18
 163:main.c        **** 		PORTA |= 1;
 900               	.LM58:
 901 0398 82E2      		ldi r24,lo8(34)
 902 039a 90E0      		ldi r25,0
 903 039c 22E2      		ldi r18,lo8(34)
 904 039e 30E0      		ldi r19,0
 905 03a0 F901      		movw r30,r18
 906 03a2 2081      		ld r18,Z
 907 03a4 2160      		ori r18,lo8(1)
 908 03a6 FC01      		movw r30,r24
 909 03a8 2083      		st Z,r18
 164:main.c        **** 		vTaskDelay(200); 
 911               	.LM59:
 912 03aa 88EC      		ldi r24,lo8(-56)
 913 03ac 90E0      		ldi r25,0
 914 03ae 0E94 0000 		call vTaskDelay
 165:main.c        **** 		PORTA &= ~3;
 916               	.LM60:
 917 03b2 82E2      		ldi r24,lo8(34)
 918 03b4 90E0      		ldi r25,0
 919 03b6 22E2      		ldi r18,lo8(34)
 920 03b8 30E0      		ldi r19,0
 921 03ba F901      		movw r30,r18
 922 03bc 2081      		ld r18,Z
 923 03be 2C7F      		andi r18,lo8(-4)
 924 03c0 FC01      		movw r30,r24
 925 03c2 2083      		st Z,r18
 166:main.c        **** 		PORTA |= 2;
 927               	.LM61:
 928 03c4 82E2      		ldi r24,lo8(34)
 929 03c6 90E0      		ldi r25,0
 930 03c8 22E2      		ldi r18,lo8(34)
 931 03ca 30E0      		ldi r19,0
 932 03cc F901      		movw r30,r18
 933 03ce 2081      		ld r18,Z
 934 03d0 2260      		ori r18,lo8(2)
 935 03d2 FC01      		movw r30,r24
 936 03d4 2083      		st Z,r18
 167:main.c        **** 		vTaskDelay(200);
 938               	.LM62:
 939 03d6 88EC      		ldi r24,lo8(-56)
 940 03d8 90E0      		ldi r25,0
 941 03da 0E94 0000 		call vTaskDelay
 168:main.c        **** 	}	
 943               	.LM63:
 944 03de 00C0      		rjmp .L16
 946               	.Lscope9:
 948               		.stabd	78,0,0
 951               	.global	vTaskFunction_3
 953               	vTaskFunction_3:
 954               		.stabd	46,0,0
 169:main.c        **** }
 170:main.c        **** 
 171:main.c        **** void vTaskFunction_3(void *pvParameters){
 956               	.LM64:
 957               	.LFBB10:
 958 03e0 CF93      		push r28
 959 03e2 DF93      		push r29
 960 03e4 1F92      		push __zero_reg__
 961 03e6 1F92      		push __zero_reg__
 962 03e8 CDB7      		in r28,__SP_L__
 963 03ea DEB7      		in r29,__SP_H__
 964               	/* prologue: function */
 965               	/* frame size = 2 */
 966               	/* stack size = 4 */
 967               	.L__stack_usage = 4
 968 03ec 9A83      		std Y+2,r25
 969 03ee 8983      		std Y+1,r24
 970               	.L20:
 172:main.c        **** 
 173:main.c        **** 	for(;;){
 174:main.c        **** 		if(PINA & 0x08){
 972               	.LM65:
 973 03f0 80E2      		ldi r24,lo8(32)
 974 03f2 90E0      		ldi r25,0
 975 03f4 FC01      		movw r30,r24
 976 03f6 8081      		ld r24,Z
 977 03f8 882F      		mov r24,r24
 978 03fa 90E0      		ldi r25,0
 979 03fc 8870      		andi r24,8
 980 03fe 9927      		clr r25
 981 0400 0097      		sbiw r24,0
 982 0402 01F0      		breq .L18
 175:main.c        **** 			PORTA |= 0x80;
 984               	.LM66:
 985 0404 82E2      		ldi r24,lo8(34)
 986 0406 90E0      		ldi r25,0
 987 0408 22E2      		ldi r18,lo8(34)
 988 040a 30E0      		ldi r19,0
 989 040c F901      		movw r30,r18
 990 040e 2081      		ld r18,Z
 991 0410 2068      		ori r18,lo8(-128)
 992 0412 FC01      		movw r30,r24
 993 0414 2083      		st Z,r18
 176:main.c        **** 		} else {
 177:main.c        **** 			PORTA &= ~0x80;
 178:main.c        **** 		}
 179:main.c        **** 	}
 995               	.LM67:
 996 0416 00C0      		rjmp .L20
 997               	.L18:
 177:main.c        **** 		}
 999               	.LM68:
 1000 0418 82E2      		ldi r24,lo8(34)
 1001 041a 90E0      		ldi r25,0
 1002 041c 22E2      		ldi r18,lo8(34)
 1003 041e 30E0      		ldi r19,0
 1004 0420 F901      		movw r30,r18
 1005 0422 2081      		ld r18,Z
 1006 0424 2F77      		andi r18,lo8(127)
 1007 0426 FC01      		movw r30,r24
 1008 0428 2083      		st Z,r18
 1010               	.LM69:
 1011 042a 00C0      		rjmp .L20
 1013               	.Lscope10:
 1015               		.stabd	78,0,0
 1018               	.global	vTaskPot
 1020               	vTaskPot:
 1021               		.stabd	46,0,0
 180:main.c        **** 
 181:main.c        **** }
 182:main.c        **** 
 183:main.c        **** void vTaskPot(void *pvParameters){
 1023               	.LM70:
 1024               	.LFBB11:
 1025 042c CF93      		push r28
 1026 042e DF93      		push r29
 1027 0430 00D0      		rcall .
 1028 0432 1F92      		push __zero_reg__
 1029 0434 CDB7      		in r28,__SP_L__
 1030 0436 DEB7      		in r29,__SP_H__
 1031               	/* prologue: function */
 1032               	/* frame size = 4 */
 1033               	/* stack size = 6 */
 1034               	.L__stack_usage = 6
 1035 0438 9C83      		std Y+4,r25
 1036 043a 8B83      		std Y+3,r24
 184:main.c        **** 	initializeSPI();
 1038               	.LM71:
 1039 043c 0E94 0000 		call initializeSPI
 185:main.c        **** 	int a = 0;
 1041               	.LM72:
 1042 0440 1A82      		std Y+2,__zero_reg__
 1043 0442 1982      		std Y+1,__zero_reg__
 186:main.c        **** 	initSpeedController();
 1045               	.LM73:
 1046 0444 0E94 0000 		call initSpeedController
 1047               	.L22:
 187:main.c        **** 	/*for(;;){
 188:main.c        **** 		setPot(a);
 189:main.c        **** 		vTaskDelay(80);
 190:main.c        **** 		a++;
 191:main.c        **** 	}*/
 192:main.c        **** 	for(;;){
 193:main.c        **** 		setPot(1);
 1049               	.LM74:
 1050 0448 81E0      		ldi r24,lo8(1)
 1051 044a 90E0      		ldi r25,0
 1052 044c 0E94 0000 		call setPot
 194:main.c        **** 		vTaskDelay(500);
 1054               	.LM75:
 1055 0450 84EF      		ldi r24,lo8(-12)
 1056 0452 91E0      		ldi r25,lo8(1)
 1057 0454 0E94 0000 		call vTaskDelay
 195:main.c        **** 		setPot(0x40);
 1059               	.LM76:
 1060 0458 80E4      		ldi r24,lo8(64)
 1061 045a 90E0      		ldi r25,0
 1062 045c 0E94 0000 		call setPot
 196:main.c        **** 		vTaskDelay(500);
 1064               	.LM77:
 1065 0460 84EF      		ldi r24,lo8(-12)
 1066 0462 91E0      		ldi r25,lo8(1)
 1067 0464 0E94 0000 		call vTaskDelay
 197:main.c        **** 		setPot(0x7F);
 1069               	.LM78:
 1070 0468 8FE7      		ldi r24,lo8(127)
 1071 046a 90E0      		ldi r25,0
 1072 046c 0E94 0000 		call setPot
 198:main.c        **** 		vTaskDelay(500);
 1074               	.LM79:
 1075 0470 84EF      		ldi r24,lo8(-12)
 1076 0472 91E0      		ldi r25,lo8(1)
 1077 0474 0E94 0000 		call vTaskDelay
 199:main.c        **** 		setPot(0x40);
 1079               	.LM80:
 1080 0478 80E4      		ldi r24,lo8(64)
 1081 047a 90E0      		ldi r25,0
 1082 047c 0E94 0000 		call setPot
 200:main.c        **** 		vTaskDelay(500);
 1084               	.LM81:
 1085 0480 84EF      		ldi r24,lo8(-12)
 1086 0482 91E0      		ldi r25,lo8(1)
 1087 0484 0E94 0000 		call vTaskDelay
 201:main.c        **** 	}
 1089               	.LM82:
 1090 0488 00C0      		rjmp .L22
 1095               	.Lscope11:
 1097               		.stabd	78,0,0
 1099               	.global	vIO_init
 1101               	vIO_init:
 1102               		.stabd	46,0,0
 202:main.c        **** }
 203:main.c        **** 
 204:main.c        **** 
 205:main.c        **** void vIO_init(void)
 206:main.c        **** {
 1104               	.LM83:
 1105               	.LFBB12:
 1106 048a CF93      		push r28
 1107 048c DF93      		push r29
 1108 048e CDB7      		in r28,__SP_L__
 1109 0490 DEB7      		in r29,__SP_H__
 1110               	/* prologue: function */
 1111               	/* frame size = 0 */
 1112               	/* stack size = 2 */
 1113               	.L__stack_usage = 2
 207:main.c        ****     //- set PortB as output
 208:main.c        **** 	DDRB = 0xFF; 
 1115               	.LM84:
 1116 0492 84E2      		ldi r24,lo8(36)
 1117 0494 90E0      		ldi r25,0
 1118 0496 2FEF      		ldi r18,lo8(-1)
 1119 0498 FC01      		movw r30,r24
 1120 049a 2083      		st Z,r18
 209:main.c        ****     PORTB = 0; 
 1122               	.LM85:
 1123 049c 85E2      		ldi r24,lo8(37)
 1124 049e 90E0      		ldi r25,0
 1125 04a0 FC01      		movw r30,r24
 1126 04a2 1082      		st Z,__zero_reg__
 1127               	/* epilogue start */
 210:main.c        **** }
 1129               	.LM86:
 1130 04a4 DF91      		pop r29
 1131 04a6 CF91      		pop r28
 1132 04a8 0895      		ret
 1134               	.Lscope12:
 1136               		.stabd	78,0,0
 1140               	.Letext0:
 1141               		.ident	"GCC: (GNU) 4.8.2"
 1142               	.global __do_copy_data
 1143               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccYP5eil.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccYP5eil.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccYP5eil.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccYP5eil.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccYP5eil.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccYP5eil.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccYP5eil.s:163    .bss:0000000000000000 count
                            *COM*:0000000000000002 sonarTime
     /tmp/ccYP5eil.s:170    .text:0000000000000000 vApplicationTickHook
     /tmp/ccYP5eil.s:203    .text:0000000000000020 vApplicationStackOverflowHook
     /tmp/ccYP5eil.s:242    .text:0000000000000030 main
     /tmp/ccYP5eil.s:1101   .text:000000000000048a vIO_init
     /tmp/ccYP5eil.s:798    .text:000000000000031e vTaskFunction_1
     /tmp/ccYP5eil.s:466    .text:0000000000000160 printHex
     /tmp/ccYP5eil.s:592    .text:0000000000000220 printNum
     /tmp/ccYP5eil.s:689    .text:000000000000029a __vector_50
     /tmp/ccYP5eil.s:763    .text:0000000000000304 getTimerCount2
     /tmp/ccYP5eil.s:836    .text:0000000000000340 vTaskFunction_2
     /tmp/ccYP5eil.s:953    .text:00000000000003e0 vTaskFunction_3
     /tmp/ccYP5eil.s:1020   .text:000000000000042c vTaskPot

UNDEFINED SYMBOLS
xTaskGenericCreate
vTaskSonar
vTaskUSARTWrite
vTaskUSARTRead
vTaskStartScheduler
USART_Write
memset
itoa
USART_AddToQueue
USART_Init
vTaskDelay
initializeSPI
initSpeedController
setPot
__do_copy_data
__do_clear_bss
