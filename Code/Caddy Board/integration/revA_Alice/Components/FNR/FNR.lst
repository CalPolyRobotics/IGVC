   1               		.file	"FNR.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 105               	.global	setFNR
 107               	setFNR:
 108               		.stabd	46,0,0
   1:Components/FNR/FNR.c **** //FNR controller functions
   2:Components/FNR/FNR.c **** #include <avr/io.h>
   3:Components/FNR/FNR.c **** 
   4:Components/FNR/FNR.c **** //set the FNR controller, inputs are either -1, 0, or 1.
   5:Components/FNR/FNR.c **** char setFNR(char FNR) {
 110               	.LM0:
 111               	.LFBB1:
 112 0000 CF93      		push r28
 113 0002 DF93      		push r29
 114 0004 1F92      		push __zero_reg__
 115 0006 CDB7      		in r28,__SP_L__
 116 0008 DEB7      		in r29,__SP_H__
 117               	/* prologue: function */
 118               	/* frame size = 1 */
 119               	/* stack size = 3 */
 120               	.L__stack_usage = 3
 121 000a 8983      		std Y+1,r24
   6:Components/FNR/FNR.c ****    //dummy function, nothing happens
   7:Components/FNR/FNR.c ****    //return success
   8:Components/FNR/FNR.c ****    return 1;
 123               	.LM1:
 124 000c 81E0      		ldi r24,lo8(1)
 125               	/* epilogue start */
   9:Components/FNR/FNR.c **** }
 127               	.LM2:
 128 000e 0F90      		pop __tmp_reg__
 129 0010 DF91      		pop r29
 130 0012 CF91      		pop r28
 131 0014 0895      		ret
 133               	.Lscope1:
 135               		.stabd	78,0,0
 138               	.global	getFNR
 140               	getFNR:
 141               		.stabd	46,0,0
  10:Components/FNR/FNR.c **** 
  11:Components/FNR/FNR.c **** //get the current FNR state. Function follows same format for consistancy
  12:Components/FNR/FNR.c **** char getFNR(char *sensorResponse) {
 143               	.LM3:
 144               	.LFBB2:
 145 0016 CF93      		push r28
 146 0018 DF93      		push r29
 147 001a 1F92      		push __zero_reg__
 148 001c 1F92      		push __zero_reg__
 149 001e CDB7      		in r28,__SP_L__
 150 0020 DEB7      		in r29,__SP_H__
 151               	/* prologue: function */
 152               	/* frame size = 2 */
 153               	/* stack size = 4 */
 154               	.L__stack_usage = 4
 155 0022 9A83      		std Y+2,r25
 156 0024 8983      		std Y+1,r24
  13:Components/FNR/FNR.c ****    //fake reading
  14:Components/FNR/FNR.c ****    *sensorResponse = 0;
 158               	.LM4:
 159 0026 8981      		ldd r24,Y+1
 160 0028 9A81      		ldd r25,Y+2
 161 002a FC01      		movw r30,r24
 162 002c 1082      		st Z,__zero_reg__
  15:Components/FNR/FNR.c ****    //return success
  16:Components/FNR/FNR.c ****    return 1;
 164               	.LM5:
 165 002e 81E0      		ldi r24,lo8(1)
 166               	/* epilogue start */
  17:Components/FNR/FNR.c **** }
 168               	.LM6:
 169 0030 0F90      		pop __tmp_reg__
 170 0032 0F90      		pop __tmp_reg__
 171 0034 DF91      		pop r29
 172 0036 CF91      		pop r28
 173 0038 0895      		ret
 175               	.Lscope2:
 177               		.stabd	78,0,0
 179               	.Letext0:
 180               		.ident	"GCC: (GNU) 4.8.2"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 FNR.c
     /tmp/ccofGRSZ.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccofGRSZ.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccofGRSZ.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccofGRSZ.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccofGRSZ.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccofGRSZ.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccofGRSZ.s:107    .text:0000000000000000 setFNR
     /tmp/ccofGRSZ.s:140    .text:0000000000000016 getFNR

NO UNDEFINED SYMBOLS
