   1               		.file	"Steering.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  10               		.text
  11               	.Ltext0:
 141               		.local	steeringTarget
 142               		.comm	steeringTarget,2,1
 143               		.local	wheelAngle
 144               		.comm	wheelAngle,2,1
 145               		.local	steeringDir
 146               		.comm	steeringDir,2,1
 147               		.local	steeringSpd
 148               		.comm	steeringSpd,2,1
 152               	.global	getLinearPotCallback
 154               	getLinearPotCallback:
 155               		.stabd	46,0,0
   1:Components/Steering/Steering.c **** #include <avr/io.h>
   2:Components/Steering/Steering.c **** #include <avr/interrupt.h>
   3:Components/Steering/Steering.c **** #include "FreeRTOS.h"
   4:Components/Steering/Steering.c **** #include "task.h"
   5:Components/Steering/Steering.c **** #include "../../ADC.h"
   6:Components/Steering/Steering.c **** #include "Steering.h"
   7:Components/Steering/Steering.c **** //Steering group
   8:Components/Steering/Steering.c **** 
   9:Components/Steering/Steering.c **** #define STEERING_PORT	PORTB
  10:Components/Steering/Steering.c **** #define STEERING_LEFT	(1 << 5)
  11:Components/Steering/Steering.c **** #define STEERING_RIGHT	(1 << 4)
  12:Components/Steering/Steering.c **** 
  13:Components/Steering/Steering.c **** #define STEERING_LEFT_COM0 COM1A0
  14:Components/Steering/Steering.c **** #define STEERING_LEFT_COM1 COM1A1
  15:Components/Steering/Steering.c **** 
  16:Components/Steering/Steering.c **** #define STEERING_RIGHT_COM0 COM1B0
  17:Components/Steering/Steering.c **** #define STEERING_RIGHT_COM1 COM1B1
  18:Components/Steering/Steering.c **** 
  19:Components/Steering/Steering.c **** #define STEERING_LEFT_CMPH OCR1AH
  20:Components/Steering/Steering.c **** #define STEERING_LEFT_CMPL OCR1AL
  21:Components/Steering/Steering.c **** #define STEERING_RIGHT_CMPH OCR1BH
  22:Components/Steering/Steering.c **** #define STEERING_RIGHT_CMPL OCR1BL
  23:Components/Steering/Steering.c **** 
  24:Components/Steering/Steering.c **** static int steeringTarget;
  25:Components/Steering/Steering.c **** static int wheelAngle;
  26:Components/Steering/Steering.c **** 
  27:Components/Steering/Steering.c **** static int steeringDir;
  28:Components/Steering/Steering.c **** static int steeringSpd;
  29:Components/Steering/Steering.c **** 
  30:Components/Steering/Steering.c **** void printHex(int a);
  31:Components/Steering/Steering.c **** void printNum(int a);
  32:Components/Steering/Steering.c **** void USART_Write(char a);
  33:Components/Steering/Steering.c **** void printWheelAngle(void);
  34:Components/Steering/Steering.c **** void getLinearPotCallback(int data, void *parameters);
  35:Components/Steering/Steering.c **** 
  36:Components/Steering/Steering.c **** 
  37:Components/Steering/Steering.c **** void getLinearPotCallback(int data,void *parameters){
 157               	.LM0:
 158               	.LFBB1:
 159 0000 CF93      		push r28
 160 0002 DF93      		push r29
 161 0004 00D0      		rcall .
 162 0006 1F92      		push __zero_reg__
 163 0008 CDB7      		in r28,__SP_L__
 164 000a DEB7      		in r29,__SP_H__
 165               	/* prologue: function */
 166               	/* frame size = 4 */
 167               	/* stack size = 6 */
 168               	.L__stack_usage = 6
 169 000c 9A83      		std Y+2,r25
 170 000e 8983      		std Y+1,r24
 171 0010 7C83      		std Y+4,r23
 172 0012 6B83      		std Y+3,r22
  38:Components/Steering/Steering.c **** 	wheelAngle = data / -4 + 74;
 174               	.LM1:
 175 0014 8981      		ldd r24,Y+1
 176 0016 9A81      		ldd r25,Y+2
 177 0018 9923      		tst r25
 178 001a 04F4      		brge .L2
 179 001c 0396      		adiw r24,3
 180               	.L2:
 181 001e 9595      		asr r25
 182 0020 8795      		ror r24
 183 0022 9595      		asr r25
 184 0024 8795      		ror r24
 185 0026 9195      		neg r25
 186 0028 8195      		neg r24
 187 002a 9109      		sbc r25,__zero_reg__
 188 002c 865B      		subi r24,-74
 189 002e 9F4F      		sbci r25,-1
 190 0030 9093 0000 		sts wheelAngle+1,r25
 191 0034 8093 0000 		sts wheelAngle,r24
 192               	/* epilogue start */
  39:Components/Steering/Steering.c ****    //wheelAngle = data;
  40:Components/Steering/Steering.c **** }
 194               	.LM2:
 195 0038 0F90      		pop __tmp_reg__
 196 003a 0F90      		pop __tmp_reg__
 197 003c 0F90      		pop __tmp_reg__
 198 003e 0F90      		pop __tmp_reg__
 199 0040 DF91      		pop r29
 200 0042 CF91      		pop r28
 201 0044 0895      		ret
 203               	.Lscope1:
 205               		.stabd	78,0,0
 207               	.global	initializeSteeringTimer
 209               	initializeSteeringTimer:
 210               		.stabd	46,0,0
  41:Components/Steering/Steering.c **** 
  42:Components/Steering/Steering.c **** void initializeSteeringTimer(){
 212               	.LM3:
 213               	.LFBB2:
 214 0046 CF93      		push r28
 215 0048 DF93      		push r29
 216 004a CDB7      		in r28,__SP_L__
 217 004c DEB7      		in r29,__SP_H__
 218               	/* prologue: function */
 219               	/* frame size = 0 */
 220               	/* stack size = 2 */
 221               	.L__stack_usage = 2
  43:Components/Steering/Steering.c **** 	
  44:Components/Steering/Steering.c **** 	//TCCR1A = (1 << COM1A1)|(1 << WGM11);
  45:Components/Steering/Steering.c ****    TCCR5A = (1 << WGM51);
 223               	.LM4:
 224 004e 80E2      		ldi r24,lo8(32)
 225 0050 91E0      		ldi r25,lo8(1)
 226 0052 22E0      		ldi r18,lo8(2)
 227 0054 FC01      		movw r30,r24
 228 0056 2083      		st Z,r18
  46:Components/Steering/Steering.c **** 	TCCR5B = (1 << WGM52)|(1 << CS50);
 230               	.LM5:
 231 0058 81E2      		ldi r24,lo8(33)
 232 005a 91E0      		ldi r25,lo8(1)
 233 005c 29E0      		ldi r18,lo8(9)
 234 005e FC01      		movw r30,r24
 235 0060 2083      		st Z,r18
  47:Components/Steering/Steering.c **** 	TCCR5C = 0;
 237               	.LM6:
 238 0062 82E2      		ldi r24,lo8(34)
 239 0064 91E0      		ldi r25,lo8(1)
 240 0066 FC01      		movw r30,r24
 241 0068 1082      		st Z,__zero_reg__
  48:Components/Steering/Steering.c **** 
  49:Components/Steering/Steering.c ****    OCR5AH = 0xFF;
 243               	.LM7:
 244 006a 89E2      		ldi r24,lo8(41)
 245 006c 91E0      		ldi r25,lo8(1)
 246 006e 2FEF      		ldi r18,lo8(-1)
 247 0070 FC01      		movw r30,r24
 248 0072 2083      		st Z,r18
  50:Components/Steering/Steering.c ****    OCR5AL = 0xFF;
 250               	.LM8:
 251 0074 88E2      		ldi r24,lo8(40)
 252 0076 91E0      		ldi r25,lo8(1)
 253 0078 2FEF      		ldi r18,lo8(-1)
 254 007a FC01      		movw r30,r24
 255 007c 2083      		st Z,r18
  51:Components/Steering/Steering.c **** 
  52:Components/Steering/Steering.c ****    TIMSK5 = (1 << OCIE5A)|(1 << TOIE5);
 257               	.LM9:
 258 007e 83E7      		ldi r24,lo8(115)
 259 0080 90E0      		ldi r25,0
 260 0082 23E0      		ldi r18,lo8(3)
 261 0084 FC01      		movw r30,r24
 262 0086 2083      		st Z,r18
 263               	/* epilogue start */
  53:Components/Steering/Steering.c **** 
  54:Components/Steering/Steering.c **** }
 265               	.LM10:
 266 0088 DF91      		pop r29
 267 008a CF91      		pop r28
 268 008c 0895      		ret
 270               	.Lscope2:
 272               		.stabd	78,0,0
 274               	.global	__vector_50
 276               	__vector_50:
 277               		.stabd	46,0,0
  55:Components/Steering/Steering.c **** 
  56:Components/Steering/Steering.c **** ISR(TIMER5_OVF_vect) {
 279               	.LM11:
 280               	.LFBB3:
 281 008e 1F92      		push r1
 282 0090 0F92      		push r0
 283 0092 0090 5F00 		lds r0,95
 284 0096 0F92      		push r0
 285 0098 1124      		clr __zero_reg__
 286 009a 0090 5B00 		lds r0,91
 287 009e 0F92      		push r0
 288 00a0 2F93      		push r18
 289 00a2 3F93      		push r19
 290 00a4 8F93      		push r24
 291 00a6 9F93      		push r25
 292 00a8 EF93      		push r30
 293 00aa FF93      		push r31
 294 00ac CF93      		push r28
 295 00ae DF93      		push r29
 296 00b0 CDB7      		in r28,__SP_L__
 297 00b2 DEB7      		in r29,__SP_H__
 298               	/* prologue: Signal */
 299               	/* frame size = 0 */
 300               	/* stack size = 12 */
 301               	.L__stack_usage = 12
  57:Components/Steering/Steering.c **** 
  58:Components/Steering/Steering.c ****    if(steeringDir == -1) {
 303               	.LM12:
 304 00b4 8091 0000 		lds r24,steeringDir
 305 00b8 9091 0000 		lds r25,steeringDir+1
 306 00bc 8F3F      		cpi r24,-1
 307 00be 2FEF      		ldi r18,-1
 308 00c0 9207      		cpc r25,r18
 309 00c2 01F4      		brne .L5
  59:Components/Steering/Steering.c ****       PORTB &= ~(1 << PB5);
 311               	.LM13:
 312 00c4 85E2      		ldi r24,lo8(37)
 313 00c6 90E0      		ldi r25,0
 314 00c8 25E2      		ldi r18,lo8(37)
 315 00ca 30E0      		ldi r19,0
 316 00cc F901      		movw r30,r18
 317 00ce 2081      		ld r18,Z
 318 00d0 2F7D      		andi r18,lo8(-33)
 319 00d2 FC01      		movw r30,r24
 320 00d4 2083      		st Z,r18
  60:Components/Steering/Steering.c ****       PORTB |= (1 << PB4);
 322               	.LM14:
 323 00d6 85E2      		ldi r24,lo8(37)
 324 00d8 90E0      		ldi r25,0
 325 00da 25E2      		ldi r18,lo8(37)
 326 00dc 30E0      		ldi r19,0
 327 00de F901      		movw r30,r18
 328 00e0 2081      		ld r18,Z
 329 00e2 2061      		ori r18,lo8(16)
 330 00e4 FC01      		movw r30,r24
 331 00e6 2083      		st Z,r18
 332 00e8 00C0      		rjmp .L4
 333               	.L5:
  61:Components/Steering/Steering.c ****    } else if(steeringDir == 1) {
 335               	.LM15:
 336 00ea 8091 0000 		lds r24,steeringDir
 337 00ee 9091 0000 		lds r25,steeringDir+1
 338 00f2 8130      		cpi r24,1
 339 00f4 9105      		cpc r25,__zero_reg__
 340 00f6 01F4      		brne .L7
  62:Components/Steering/Steering.c ****       PORTB &= ~(1 << PB4);
 342               	.LM16:
 343 00f8 85E2      		ldi r24,lo8(37)
 344 00fa 90E0      		ldi r25,0
 345 00fc 25E2      		ldi r18,lo8(37)
 346 00fe 30E0      		ldi r19,0
 347 0100 F901      		movw r30,r18
 348 0102 2081      		ld r18,Z
 349 0104 2F7E      		andi r18,lo8(-17)
 350 0106 FC01      		movw r30,r24
 351 0108 2083      		st Z,r18
  63:Components/Steering/Steering.c ****       PORTB |= (1 << PB5);
 353               	.LM17:
 354 010a 85E2      		ldi r24,lo8(37)
 355 010c 90E0      		ldi r25,0
 356 010e 25E2      		ldi r18,lo8(37)
 357 0110 30E0      		ldi r19,0
 358 0112 F901      		movw r30,r18
 359 0114 2081      		ld r18,Z
 360 0116 2062      		ori r18,lo8(32)
 361 0118 FC01      		movw r30,r24
 362 011a 2083      		st Z,r18
 363 011c 00C0      		rjmp .L4
 364               	.L7:
  64:Components/Steering/Steering.c ****    } else {
  65:Components/Steering/Steering.c ****       PORTB &= ~((1 << PB4) | (1 << PB5));
 366               	.LM18:
 367 011e 85E2      		ldi r24,lo8(37)
 368 0120 90E0      		ldi r25,0
 369 0122 25E2      		ldi r18,lo8(37)
 370 0124 30E0      		ldi r19,0
 371 0126 F901      		movw r30,r18
 372 0128 2081      		ld r18,Z
 373 012a 2F7C      		andi r18,lo8(-49)
 374 012c FC01      		movw r30,r24
 375 012e 2083      		st Z,r18
 376               	.L4:
 377               	/* epilogue start */
  66:Components/Steering/Steering.c ****    }
  67:Components/Steering/Steering.c **** }
 379               	.LM19:
 380 0130 DF91      		pop r29
 381 0132 CF91      		pop r28
 382 0134 FF91      		pop r31
 383 0136 EF91      		pop r30
 384 0138 9F91      		pop r25
 385 013a 8F91      		pop r24
 386 013c 3F91      		pop r19
 387 013e 2F91      		pop r18
 388 0140 0F90      		pop r0
 389 0142 0092 5B00 		sts 91,r0
 390 0146 0F90      		pop r0
 391 0148 0092 5F00 		sts 95,r0
 392 014c 0F90      		pop r0
 393 014e 1F90      		pop r1
 394 0150 1895      		reti
 396               	.Lscope3:
 398               		.stabd	78,0,0
 400               	.global	__vector_47
 402               	__vector_47:
 403               		.stabd	46,0,0
  68:Components/Steering/Steering.c **** 
  69:Components/Steering/Steering.c **** ISR(TIMER5_COMPA_vect) {
 405               	.LM20:
 406               	.LFBB4:
 407 0152 1F92      		push r1
 408 0154 0F92      		push r0
 409 0156 0090 5F00 		lds r0,95
 410 015a 0F92      		push r0
 411 015c 1124      		clr __zero_reg__
 412 015e 0090 5B00 		lds r0,91
 413 0162 0F92      		push r0
 414 0164 2F93      		push r18
 415 0166 3F93      		push r19
 416 0168 8F93      		push r24
 417 016a 9F93      		push r25
 418 016c EF93      		push r30
 419 016e FF93      		push r31
 420 0170 CF93      		push r28
 421 0172 DF93      		push r29
 422 0174 CDB7      		in r28,__SP_L__
 423 0176 DEB7      		in r29,__SP_H__
 424               	/* prologue: Signal */
 425               	/* frame size = 0 */
 426               	/* stack size = 12 */
 427               	.L__stack_usage = 12
  70:Components/Steering/Steering.c ****    PORTB &= ~((1 << PB4)|(1 << PB5));
 429               	.LM21:
 430 0178 85E2      		ldi r24,lo8(37)
 431 017a 90E0      		ldi r25,0
 432 017c 25E2      		ldi r18,lo8(37)
 433 017e 30E0      		ldi r19,0
 434 0180 F901      		movw r30,r18
 435 0182 2081      		ld r18,Z
 436 0184 2F7C      		andi r18,lo8(-49)
 437 0186 FC01      		movw r30,r24
 438 0188 2083      		st Z,r18
 439               	/* epilogue start */
  71:Components/Steering/Steering.c **** }
 441               	.LM22:
 442 018a DF91      		pop r29
 443 018c CF91      		pop r28
 444 018e FF91      		pop r31
 445 0190 EF91      		pop r30
 446 0192 9F91      		pop r25
 447 0194 8F91      		pop r24
 448 0196 3F91      		pop r19
 449 0198 2F91      		pop r18
 450 019a 0F90      		pop r0
 451 019c 0092 5B00 		sts 91,r0
 452 01a0 0F90      		pop r0
 453 01a2 0092 5F00 		sts 95,r0
 454 01a6 0F90      		pop r0
 455 01a8 1F90      		pop r1
 456 01aa 1895      		reti
 458               	.Lscope4:
 460               		.stabd	78,0,0
 463               	.global	setSteeringPWMSpeed
 465               	setSteeringPWMSpeed:
 466               		.stabd	46,0,0
  72:Components/Steering/Steering.c **** 
  73:Components/Steering/Steering.c **** void setSteeringPWMSpeed(int spd){
 468               	.LM23:
 469               	.LFBB5:
 470 01ac CF93      		push r28
 471 01ae DF93      		push r29
 472 01b0 1F92      		push __zero_reg__
 473 01b2 1F92      		push __zero_reg__
 474 01b4 CDB7      		in r28,__SP_L__
 475 01b6 DEB7      		in r29,__SP_H__
 476               	/* prologue: function */
 477               	/* frame size = 2 */
 478               	/* stack size = 4 */
 479               	.L__stack_usage = 4
 480 01b8 9A83      		std Y+2,r25
 481 01ba 8983      		std Y+1,r24
  74:Components/Steering/Steering.c ****    steeringSpd = spd * steeringDir;
 483               	.LM24:
 484 01bc 4091 0000 		lds r20,steeringDir
 485 01c0 5091 0000 		lds r21,steeringDir+1
 486 01c4 2981      		ldd r18,Y+1
 487 01c6 3A81      		ldd r19,Y+2
 488 01c8 429F      		mul r20,r18
 489 01ca C001      		movw r24,r0
 490 01cc 439F      		mul r20,r19
 491 01ce 900D      		add r25,r0
 492 01d0 529F      		mul r21,r18
 493 01d2 900D      		add r25,r0
 494 01d4 1124      		clr r1
 495 01d6 9093 0000 		sts steeringSpd+1,r25
 496 01da 8093 0000 		sts steeringSpd,r24
  75:Components/Steering/Steering.c **** 
  76:Components/Steering/Steering.c ****    if(spd > 0x1B0) spd = 0x1B0;
 498               	.LM25:
 499 01de 8981      		ldd r24,Y+1
 500 01e0 9A81      		ldd r25,Y+2
 501 01e2 813B      		cpi r24,-79
 502 01e4 21E0      		ldi r18,1
 503 01e6 9207      		cpc r25,r18
 504 01e8 04F0      		brlt .L10
 506               	.LM26:
 507 01ea 80EB      		ldi r24,lo8(-80)
 508 01ec 91E0      		ldi r25,lo8(1)
 509 01ee 9A83      		std Y+2,r25
 510 01f0 8983      		std Y+1,r24
 511               	.L10:
  77:Components/Steering/Steering.c ****       
  78:Components/Steering/Steering.c **** 
  79:Components/Steering/Steering.c ****    OCR5AH = spd >> 8;
 513               	.LM27:
 514 01f2 89E2      		ldi r24,lo8(41)
 515 01f4 91E0      		ldi r25,lo8(1)
 516 01f6 2981      		ldd r18,Y+1
 517 01f8 3A81      		ldd r19,Y+2
 518 01fa 232F      		mov r18,r19
 519 01fc 330F      		lsl r19
 520 01fe 330B      		sbc r19,r19
 521 0200 FC01      		movw r30,r24
 522 0202 2083      		st Z,r18
  80:Components/Steering/Steering.c ****    OCR5AL = spd & 0xFF;
 524               	.LM28:
 525 0204 88E2      		ldi r24,lo8(40)
 526 0206 91E0      		ldi r25,lo8(1)
 527 0208 2981      		ldd r18,Y+1
 528 020a FC01      		movw r30,r24
 529 020c 2083      		st Z,r18
 530               	/* epilogue start */
  81:Components/Steering/Steering.c **** 
  82:Components/Steering/Steering.c ****     
  83:Components/Steering/Steering.c ****    /*if(steeringDir == 1) {
  84:Components/Steering/Steering.c ****       STEERING_LEFT_CMPH = steeringSpd >> 8;
  85:Components/Steering/Steering.c ****       STEERING_LEFT_CMPL = steeringSpd & 0xFF;
  86:Components/Steering/Steering.c **** 
  87:Components/Steering/Steering.c ****       STEERING_RIGHT_CMPH = 0;
  88:Components/Steering/Steering.c ****       STEERING_RIGHT_CMPL = 0;
  89:Components/Steering/Steering.c **** 
  90:Components/Steering/Steering.c ****       TCCR1A &= ~((1 << STEERING_RIGHT_COM0)|(1 << STEERING_RIGHT_COM1));
  91:Components/Steering/Steering.c ****       TCCR1A |= (1 << STEERING_LEFT_COM1);
  92:Components/Steering/Steering.c ****    } else if(steeringDir == -1) {
  93:Components/Steering/Steering.c ****       STEERING_RIGHT_CMPH = steeringSpd >> 8;
  94:Components/Steering/Steering.c ****       STEERING_RIGHT_CMPL = steeringSpd & 0xFF;
  95:Components/Steering/Steering.c **** 
  96:Components/Steering/Steering.c ****       STEERING_LEFT_CMPH = 0;
  97:Components/Steering/Steering.c ****       STEERING_LEFT_CMPL = 0;
  98:Components/Steering/Steering.c **** 
  99:Components/Steering/Steering.c ****       TCCR1A &= ~((1 << STEERING_LEFT_COM0)|(1 << STEERING_LEFT_COM1));
 100:Components/Steering/Steering.c ****       TCCR1A |= (1 << STEERING_RIGHT_COM1);
 101:Components/Steering/Steering.c ****    } else {
 102:Components/Steering/Steering.c ****       STEERING_LEFT_CMPH = 0;
 103:Components/Steering/Steering.c ****       STEERING_LEFT_CMPL = 0;
 104:Components/Steering/Steering.c ****       STEERING_RIGHT_CMPH = 0;
 105:Components/Steering/Steering.c ****       STEERING_RIGHT_CMPL = 0;
 106:Components/Steering/Steering.c ****    }*/
 107:Components/Steering/Steering.c **** }
 532               	.LM29:
 533 020e 0F90      		pop __tmp_reg__
 534 0210 0F90      		pop __tmp_reg__
 535 0212 DF91      		pop r29
 536 0214 CF91      		pop r28
 537 0216 0895      		ret
 539               	.Lscope5:
 541               		.stabd	78,0,0
 544               	.global	setSteeringDirection
 546               	setSteeringDirection:
 547               		.stabd	46,0,0
 108:Components/Steering/Steering.c **** 
 109:Components/Steering/Steering.c **** 
 110:Components/Steering/Steering.c **** 
 111:Components/Steering/Steering.c **** void setSteeringDirection(int dir){
 549               	.LM30:
 550               	.LFBB6:
 551 0218 CF93      		push r28
 552 021a DF93      		push r29
 553 021c 1F92      		push __zero_reg__
 554 021e 1F92      		push __zero_reg__
 555 0220 CDB7      		in r28,__SP_L__
 556 0222 DEB7      		in r29,__SP_H__
 557               	/* prologue: function */
 558               	/* frame size = 2 */
 559               	/* stack size = 4 */
 560               	.L__stack_usage = 4
 561 0224 9A83      		std Y+2,r25
 562 0226 8983      		std Y+1,r24
 112:Components/Steering/Steering.c **** 	/*switch(dir){
 113:Components/Steering/Steering.c **** 	case 0:
 114:Components/Steering/Steering.c **** 		STEERING_PORT &= ~STEERING_LEFT;
 115:Components/Steering/Steering.c **** 		STEERING_PORT &= ~STEERING_RIGHT;
 116:Components/Steering/Steering.c **** 		break;
 117:Components/Steering/Steering.c **** 	case 1:
 118:Components/Steering/Steering.c **** 		STEERING_PORT &= ~STEERING_LEFT;
 119:Components/Steering/Steering.c **** 		STEERING_PORT |= STEERING_RIGHT;
 120:Components/Steering/Steering.c **** 		break;
 121:Components/Steering/Steering.c **** 	case -1:
 122:Components/Steering/Steering.c **** 		STEERING_PORT &= ~STEERING_RIGHT;
 123:Components/Steering/Steering.c **** 		STEERING_PORT |= STEERING_LEFT;
 124:Components/Steering/Steering.c **** 		break;
 125:Components/Steering/Steering.c **** 	}*/
 126:Components/Steering/Steering.c ****    steeringDir = dir;
 564               	.LM31:
 565 0228 8981      		ldd r24,Y+1
 566 022a 9A81      		ldd r25,Y+2
 567 022c 9093 0000 		sts steeringDir+1,r25
 568 0230 8093 0000 		sts steeringDir,r24
 569               	/* epilogue start */
 127:Components/Steering/Steering.c **** }
 571               	.LM32:
 572 0234 0F90      		pop __tmp_reg__
 573 0236 0F90      		pop __tmp_reg__
 574 0238 DF91      		pop r29
 575 023a CF91      		pop r28
 576 023c 0895      		ret
 578               	.Lscope6:
 580               		.stabd	78,0,0
 583               	.global	setAngle
 585               	setAngle:
 586               		.stabd	46,0,0
 128:Components/Steering/Steering.c **** 
 129:Components/Steering/Steering.c **** //JUST SETS ANGLE TARGET. Actual angle changing is lower level
 130:Components/Steering/Steering.c **** char setAngle(char angleTarget) {
 588               	.LM33:
 589               	.LFBB7:
 590 023e CF93      		push r28
 591 0240 DF93      		push r29
 592 0242 1F92      		push __zero_reg__
 593 0244 CDB7      		in r28,__SP_L__
 594 0246 DEB7      		in r29,__SP_H__
 595               	/* prologue: function */
 596               	/* frame size = 1 */
 597               	/* stack size = 3 */
 598               	.L__stack_usage = 3
 599 0248 8983      		std Y+1,r24
 131:Components/Steering/Steering.c **** 	steeringTarget = angleTarget;
 601               	.LM34:
 602 024a 8981      		ldd r24,Y+1
 603 024c 9927      		clr r25
 604 024e 87FD      		sbrc r24,7
 605 0250 9095      		com r25
 606 0252 9093 0000 		sts steeringTarget+1,r25
 607 0256 8093 0000 		sts steeringTarget,r24
 132:Components/Steering/Steering.c ****    return 1;
 609               	.LM35:
 610 025a 81E0      		ldi r24,lo8(1)
 611               	/* epilogue start */
 133:Components/Steering/Steering.c **** }
 613               	.LM36:
 614 025c 0F90      		pop __tmp_reg__
 615 025e DF91      		pop r29
 616 0260 CF91      		pop r28
 617 0262 0895      		ret
 619               	.Lscope7:
 621               		.stabd	78,0,0
 624               	.global	getAngle
 626               	getAngle:
 627               		.stabd	46,0,0
 134:Components/Steering/Steering.c **** 
 135:Components/Steering/Steering.c **** //get the current angle of the steering system
 136:Components/Steering/Steering.c **** char getAngle(char* sensorResponse) {
 629               	.LM37:
 630               	.LFBB8:
 631 0264 CF93      		push r28
 632 0266 DF93      		push r29
 633 0268 1F92      		push __zero_reg__
 634 026a 1F92      		push __zero_reg__
 635 026c CDB7      		in r28,__SP_L__
 636 026e DEB7      		in r29,__SP_H__
 637               	/* prologue: function */
 638               	/* frame size = 2 */
 639               	/* stack size = 4 */
 640               	.L__stack_usage = 4
 641 0270 9A83      		std Y+2,r25
 642 0272 8983      		std Y+1,r24
 137:Components/Steering/Steering.c ****    *sensorResponse = wheelAngle;
 644               	.LM38:
 645 0274 8091 0000 		lds r24,wheelAngle
 646 0278 9091 0000 		lds r25,wheelAngle+1
 647 027c 282F      		mov r18,r24
 648 027e 8981      		ldd r24,Y+1
 649 0280 9A81      		ldd r25,Y+2
 650 0282 FC01      		movw r30,r24
 651 0284 2083      		st Z,r18
 138:Components/Steering/Steering.c ****    //return success
 139:Components/Steering/Steering.c ****    return 1;
 653               	.LM39:
 654 0286 81E0      		ldi r24,lo8(1)
 655               	/* epilogue start */
 140:Components/Steering/Steering.c **** }
 657               	.LM40:
 658 0288 0F90      		pop __tmp_reg__
 659 028a 0F90      		pop __tmp_reg__
 660 028c DF91      		pop r29
 661 028e CF91      		pop r28
 662 0290 0895      		ret
 664               	.Lscope8:
 666               		.stabd	78,0,0
 669               	.global	getDesiredAngle
 671               	getDesiredAngle:
 672               		.stabd	46,0,0
 141:Components/Steering/Steering.c **** 
 142:Components/Steering/Steering.c **** //get the angle target. argument name is sensorResponse for the sake of consistancy
 143:Components/Steering/Steering.c **** char getDesiredAngle(char* sensorResponse) {
 674               	.LM41:
 675               	.LFBB9:
 676 0292 CF93      		push r28
 677 0294 DF93      		push r29
 678 0296 1F92      		push __zero_reg__
 679 0298 1F92      		push __zero_reg__
 680 029a CDB7      		in r28,__SP_L__
 681 029c DEB7      		in r29,__SP_H__
 682               	/* prologue: function */
 683               	/* frame size = 2 */
 684               	/* stack size = 4 */
 685               	.L__stack_usage = 4
 686 029e 9A83      		std Y+2,r25
 687 02a0 8983      		std Y+1,r24
 144:Components/Steering/Steering.c ****    *sensorResponse = steeringTarget;
 689               	.LM42:
 690 02a2 8091 0000 		lds r24,steeringTarget
 691 02a6 9091 0000 		lds r25,steeringTarget+1
 692 02aa 282F      		mov r18,r24
 693 02ac 8981      		ldd r24,Y+1
 694 02ae 9A81      		ldd r25,Y+2
 695 02b0 FC01      		movw r30,r24
 696 02b2 2083      		st Z,r18
 145:Components/Steering/Steering.c ****    //return success
 146:Components/Steering/Steering.c ****    return 1;
 698               	.LM43:
 699 02b4 81E0      		ldi r24,lo8(1)
 700               	/* epilogue start */
 147:Components/Steering/Steering.c **** }
 702               	.LM44:
 703 02b6 0F90      		pop __tmp_reg__
 704 02b8 0F90      		pop __tmp_reg__
 705 02ba DF91      		pop r29
 706 02bc CF91      		pop r28
 707 02be 0895      		ret
 709               	.Lscope9:
 711               		.stabd	78,0,0
 716               	.global	changePID
 718               	changePID:
 719               		.stabd	46,0,0
 148:Components/Steering/Steering.c **** 
 149:Components/Steering/Steering.c **** //change the PID controller
 150:Components/Steering/Steering.c **** char changePID(char P, char I, char D) {
 721               	.LM45:
 722               	.LFBB10:
 723 02c0 CF93      		push r28
 724 02c2 DF93      		push r29
 725 02c4 00D0      		rcall .
 726 02c6 CDB7      		in r28,__SP_L__
 727 02c8 DEB7      		in r29,__SP_H__
 728               	/* prologue: function */
 729               	/* frame size = 3 */
 730               	/* stack size = 5 */
 731               	.L__stack_usage = 5
 732 02ca 8983      		std Y+1,r24
 733 02cc 6A83      		std Y+2,r22
 734 02ce 4B83      		std Y+3,r20
 151:Components/Steering/Steering.c ****    //dummy function, nothing happens
 152:Components/Steering/Steering.c ****    //return success
 153:Components/Steering/Steering.c ****    return 1;
 736               	.LM46:
 737 02d0 81E0      		ldi r24,lo8(1)
 738               	/* epilogue start */
 154:Components/Steering/Steering.c **** }
 740               	.LM47:
 741 02d2 0F90      		pop __tmp_reg__
 742 02d4 0F90      		pop __tmp_reg__
 743 02d6 0F90      		pop __tmp_reg__
 744 02d8 DF91      		pop r29
 745 02da CF91      		pop r28
 746 02dc 0895      		ret
 748               	.Lscope10:
 750               		.stabd	78,0,0
 754               	.global	setLimits
 756               	setLimits:
 757               		.stabd	46,0,0
 155:Components/Steering/Steering.c **** 
 156:Components/Steering/Steering.c **** //not sure what this does. Also not sure why upper and lower are separated
 157:Components/Steering/Steering.c **** //but its in the specs so...
 158:Components/Steering/Steering.c **** char setLimits(char upper, char lower) {
 759               	.LM48:
 760               	.LFBB11:
 761 02de CF93      		push r28
 762 02e0 DF93      		push r29
 763 02e2 1F92      		push __zero_reg__
 764 02e4 1F92      		push __zero_reg__
 765 02e6 CDB7      		in r28,__SP_L__
 766 02e8 DEB7      		in r29,__SP_H__
 767               	/* prologue: function */
 768               	/* frame size = 2 */
 769               	/* stack size = 4 */
 770               	.L__stack_usage = 4
 771 02ea 8983      		std Y+1,r24
 772 02ec 6A83      		std Y+2,r22
 159:Components/Steering/Steering.c ****    //dummy function, nothing happens
 160:Components/Steering/Steering.c ****    //return success
 161:Components/Steering/Steering.c ****    return 1;
 774               	.LM49:
 775 02ee 81E0      		ldi r24,lo8(1)
 776               	/* epilogue start */
 162:Components/Steering/Steering.c **** }
 778               	.LM50:
 779 02f0 0F90      		pop __tmp_reg__
 780 02f2 0F90      		pop __tmp_reg__
 781 02f4 DF91      		pop r29
 782 02f6 CF91      		pop r28
 783 02f8 0895      		ret
 785               	.Lscope11:
 787               		.stabd	78,0,0
 789               	.global	printWheelAngle
 791               	printWheelAngle:
 792               		.stabd	46,0,0
 163:Components/Steering/Steering.c **** 
 164:Components/Steering/Steering.c **** void printWheelAngle() {
 794               	.LM51:
 795               	.LFBB12:
 796 02fa CF93      		push r28
 797 02fc DF93      		push r29
 798 02fe CDB7      		in r28,__SP_L__
 799 0300 DEB7      		in r29,__SP_H__
 800               	/* prologue: function */
 801               	/* frame size = 0 */
 802               	/* stack size = 2 */
 803               	.L__stack_usage = 2
 165:Components/Steering/Steering.c ****    if(wheelAngle & 0x1000) {
 805               	.LM52:
 806 0302 8091 0000 		lds r24,wheelAngle
 807 0306 9091 0000 		lds r25,wheelAngle+1
 808 030a 8827      		clr r24
 809 030c 9071      		andi r25,16
 810 030e 0097      		sbiw r24,0
 811 0310 01F0      		breq .L23
 166:Components/Steering/Steering.c ****       USART_Write('-');
 813               	.LM53:
 814 0312 8DE2      		ldi r24,lo8(45)
 815 0314 0E94 0000 		call USART_Write
 167:Components/Steering/Steering.c ****       wheelAngle *= -1;
 817               	.LM54:
 818 0318 8091 0000 		lds r24,wheelAngle
 819 031c 9091 0000 		lds r25,wheelAngle+1
 820 0320 9195      		neg r25
 821 0322 8195      		neg r24
 822 0324 9109      		sbc r25,__zero_reg__
 823 0326 9093 0000 		sts wheelAngle+1,r25
 824 032a 8093 0000 		sts wheelAngle,r24
 825               	.L23:
 168:Components/Steering/Steering.c ****    }      
 169:Components/Steering/Steering.c ****    printNum(wheelAngle);
 827               	.LM55:
 828 032e 8091 0000 		lds r24,wheelAngle
 829 0332 9091 0000 		lds r25,wheelAngle+1
 830 0336 0E94 0000 		call printNum
 170:Components/Steering/Steering.c ****    USART_Write('\r');
 832               	.LM56:
 833 033a 8DE0      		ldi r24,lo8(13)
 834 033c 0E94 0000 		call USART_Write
 171:Components/Steering/Steering.c ****    USART_Write('\n');
 836               	.LM57:
 837 0340 8AE0      		ldi r24,lo8(10)
 838 0342 0E94 0000 		call USART_Write
 839               	/* epilogue start */
 172:Components/Steering/Steering.c **** }
 841               	.LM58:
 842 0346 DF91      		pop r29
 843 0348 CF91      		pop r28
 844 034a 0895      		ret
 846               	.Lscope12:
 848               		.stabd	78,0,0
 851               	.global	vTaskSteer
 853               	vTaskSteer:
 854               		.stabd	46,0,0
 173:Components/Steering/Steering.c **** 
 174:Components/Steering/Steering.c **** void vTaskSteer(void* parameters){
 856               	.LM59:
 857               	.LFBB13:
 858 034c CF93      		push r28
 859 034e DF93      		push r29
 860 0350 00D0      		rcall .
 861 0352 00D0      		rcall .
 862 0354 CDB7      		in r28,__SP_L__
 863 0356 DEB7      		in r29,__SP_H__
 864               	/* prologue: function */
 865               	/* frame size = 6 */
 866               	/* stack size = 8 */
 867               	.L__stack_usage = 8
 868 0358 9E83      		std Y+6,r25
 869 035a 8D83      		std Y+5,r24
 175:Components/Steering/Steering.c **** 
 176:Components/Steering/Steering.c **** 
 177:Components/Steering/Steering.c **** 	addADCDevice(0,ADC_OPT_PRECISION_HIGH,getLinearPotCallback,0);
 871               	.LM60:
 872 035c 20E0      		ldi r18,0
 873 035e 30E0      		ldi r19,0
 874 0360 40E0      		ldi r20,lo8(gs(getLinearPotCallback))
 875 0362 50E0      		ldi r21,hi8(gs(getLinearPotCallback))
 876 0364 60E0      		ldi r22,0
 877 0366 70E0      		ldi r23,0
 878 0368 80E0      		ldi r24,0
 879 036a 90E0      		ldi r25,0
 880 036c 0E94 0000 		call addADCDevice
 178:Components/Steering/Steering.c **** 
 179:Components/Steering/Steering.c **** 	int pConst = 35; 
 882               	.LM61:
 883 0370 83E2      		ldi r24,lo8(35)
 884 0372 90E0      		ldi r25,0
 885 0374 9C83      		std Y+4,r25
 886 0376 8B83      		std Y+3,r24
 180:Components/Steering/Steering.c **** 	int adjust;
 181:Components/Steering/Steering.c **** 
 182:Components/Steering/Steering.c **** 	steeringTarget = 0;
 888               	.LM62:
 889 0378 1092 0000 		sts steeringTarget+1,__zero_reg__
 890 037c 1092 0000 		sts steeringTarget,__zero_reg__
 891               	.L28:
 183:Components/Steering/Steering.c **** 	while(1){
 184:Components/Steering/Steering.c ****       
 185:Components/Steering/Steering.c **** 	   adjust = pConst * (steeringTarget - wheelAngle);
 893               	.LM63:
 894 0380 2091 0000 		lds r18,steeringTarget
 895 0384 3091 0000 		lds r19,steeringTarget+1
 896 0388 8091 0000 		lds r24,wheelAngle
 897 038c 9091 0000 		lds r25,wheelAngle+1
 898 0390 A901      		movw r20,r18
 899 0392 481B      		sub r20,r24
 900 0394 590B      		sbc r21,r25
 901 0396 2B81      		ldd r18,Y+3
 902 0398 3C81      		ldd r19,Y+4
 903 039a 429F      		mul r20,r18
 904 039c C001      		movw r24,r0
 905 039e 439F      		mul r20,r19
 906 03a0 900D      		add r25,r0
 907 03a2 529F      		mul r21,r18
 908 03a4 900D      		add r25,r0
 909 03a6 1124      		clr r1
 910 03a8 9A83      		std Y+2,r25
 911 03aa 8983      		std Y+1,r24
 186:Components/Steering/Steering.c **** 	   if(adjust < steeringTarget - 3*pConst){
 913               	.LM64:
 914 03ac 2B81      		ldd r18,Y+3
 915 03ae 3C81      		ldd r19,Y+4
 916 03b0 C901      		movw r24,r18
 917 03b2 880F      		lsl r24
 918 03b4 991F      		rol r25
 919 03b6 820F      		add r24,r18
 920 03b8 931F      		adc r25,r19
 921 03ba 9195      		neg r25
 922 03bc 8195      		neg r24
 923 03be 9109      		sbc r25,__zero_reg__
 924 03c0 2091 0000 		lds r18,steeringTarget
 925 03c4 3091 0000 		lds r19,steeringTarget+1
 926 03c8 280F      		add r18,r24
 927 03ca 391F      		adc r19,r25
 928 03cc 8981      		ldd r24,Y+1
 929 03ce 9A81      		ldd r25,Y+2
 930 03d0 8217      		cp r24,r18
 931 03d2 9307      		cpc r25,r19
 932 03d4 04F4      		brge .L25
 187:Components/Steering/Steering.c **** 	      setSteeringDirection(-1);
 934               	.LM65:
 935 03d6 8FEF      		ldi r24,lo8(-1)
 936 03d8 9FEF      		ldi r25,lo8(-1)
 937 03da 0E94 0000 		call setSteeringDirection
 188:Components/Steering/Steering.c ****          adjust *= -1;
 939               	.LM66:
 940 03de 8981      		ldd r24,Y+1
 941 03e0 9A81      		ldd r25,Y+2
 942 03e2 9195      		neg r25
 943 03e4 8195      		neg r24
 944 03e6 9109      		sbc r25,__zero_reg__
 945 03e8 9A83      		std Y+2,r25
 946 03ea 8983      		std Y+1,r24
 947 03ec 00C0      		rjmp .L26
 948               	.L25:
 189:Components/Steering/Steering.c **** 	   } else if (adjust > steeringTarget + 3*pConst){
 950               	.LM67:
 951 03ee 2B81      		ldd r18,Y+3
 952 03f0 3C81      		ldd r19,Y+4
 953 03f2 C901      		movw r24,r18
 954 03f4 880F      		lsl r24
 955 03f6 991F      		rol r25
 956 03f8 280F      		add r18,r24
 957 03fa 391F      		adc r19,r25
 958 03fc 8091 0000 		lds r24,steeringTarget
 959 0400 9091 0000 		lds r25,steeringTarget+1
 960 0404 280F      		add r18,r24
 961 0406 391F      		adc r19,r25
 962 0408 8981      		ldd r24,Y+1
 963 040a 9A81      		ldd r25,Y+2
 964 040c 2817      		cp r18,r24
 965 040e 3907      		cpc r19,r25
 966 0410 04F4      		brge .L27
 190:Components/Steering/Steering.c **** 	      setSteeringDirection(1);
 968               	.LM68:
 969 0412 81E0      		ldi r24,lo8(1)
 970 0414 90E0      		ldi r25,0
 971 0416 0E94 0000 		call setSteeringDirection
 972 041a 00C0      		rjmp .L26
 973               	.L27:
 191:Components/Steering/Steering.c **** 	   } else {
 192:Components/Steering/Steering.c **** 	      setSteeringDirection(0);
 975               	.LM69:
 976 041c 80E0      		ldi r24,0
 977 041e 90E0      		ldi r25,0
 978 0420 0E94 0000 		call setSteeringDirection
 979               	.L26:
 193:Components/Steering/Steering.c **** 	      //steeringTarget = wheelAngle;
 194:Components/Steering/Steering.c **** 	   }
 195:Components/Steering/Steering.c ****       setSteeringPWMSpeed(adjust + 50);
 981               	.LM70:
 982 0424 8981      		ldd r24,Y+1
 983 0426 9A81      		ldd r25,Y+2
 984 0428 C296      		adiw r24,50
 985 042a 0E94 0000 		call setSteeringPWMSpeed
 196:Components/Steering/Steering.c ****       printNum(adjust + 50);
 987               	.LM71:
 988 042e 8981      		ldd r24,Y+1
 989 0430 9A81      		ldd r25,Y+2
 990 0432 C296      		adiw r24,50
 991 0434 0E94 0000 		call printNum
 197:Components/Steering/Steering.c ****       USART_Write(' ');
 993               	.LM72:
 994 0438 80E2      		ldi r24,lo8(32)
 995 043a 0E94 0000 		call USART_Write
 198:Components/Steering/Steering.c ****       printWheelAngle();
 997               	.LM73:
 998 043e 0E94 0000 		call printWheelAngle
 199:Components/Steering/Steering.c ****  
 200:Components/Steering/Steering.c **** 	   vTaskDelay(10);
 1000               	.LM74:
 1001 0442 8AE0      		ldi r24,lo8(10)
 1002 0444 90E0      		ldi r25,0
 1003 0446 0E94 0000 		call vTaskDelay
 201:Components/Steering/Steering.c **** 	}
 1005               	.LM75:
 1006 044a 00C0      		rjmp .L28
 1012               	.Lscope13:
 1014               		.stabd	78,0,0
 1020               	.Letext0:
 1021               		.ident	"GCC: (GNU) 4.9.0"
 1022               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Steering.c
     /tmp/ccKz8eKi.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccKz8eKi.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccKz8eKi.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccKz8eKi.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccKz8eKi.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccKz8eKi.s:7      *ABS*:0000000000000001 __zero_reg__
                             .bss:0000000000000000 steeringTarget
     /tmp/ccKz8eKi.s:142    .bss:0000000000000002 wheelAngle
     /tmp/ccKz8eKi.s:144    .bss:0000000000000004 steeringDir
     /tmp/ccKz8eKi.s:146    .bss:0000000000000006 steeringSpd
     /tmp/ccKz8eKi.s:154    .text:0000000000000000 getLinearPotCallback
     /tmp/ccKz8eKi.s:209    .text:0000000000000046 initializeSteeringTimer
     /tmp/ccKz8eKi.s:276    .text:000000000000008e __vector_50
     /tmp/ccKz8eKi.s:402    .text:0000000000000152 __vector_47
     /tmp/ccKz8eKi.s:465    .text:00000000000001ac setSteeringPWMSpeed
     /tmp/ccKz8eKi.s:546    .text:0000000000000218 setSteeringDirection
     /tmp/ccKz8eKi.s:585    .text:000000000000023e setAngle
     /tmp/ccKz8eKi.s:626    .text:0000000000000264 getAngle
     /tmp/ccKz8eKi.s:671    .text:0000000000000292 getDesiredAngle
     /tmp/ccKz8eKi.s:718    .text:00000000000002c0 changePID
     /tmp/ccKz8eKi.s:756    .text:00000000000002de setLimits
     /tmp/ccKz8eKi.s:791    .text:00000000000002fa printWheelAngle
     /tmp/ccKz8eKi.s:853    .text:000000000000034c vTaskSteer

UNDEFINED SYMBOLS
USART_Write
printNum
addADCDevice
vTaskDelay
__do_clear_bss
